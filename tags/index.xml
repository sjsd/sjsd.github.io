<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SJSD - blogg og notater om mine DIY</title>
    <link>http://sjsd.github.io/tags/</link>
    <description>Recent content on SJSD - blogg og notater om mine DIY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>no-nb</language>
    <lastBuildDate>Sun, 03 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://sjsd.github.io/tags/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kodeklubben, Processing og Ping-Pong (forslag til løsning)</title>
      <link>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</guid>
      <description>

&lt;p&gt;Dette er en kopi og gjennomgang av oppgaven &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; laget av Kodeklubben. Min løsning er langt ifra den mest effektive kode. Den tar utangspunkt i hvert steg i oppgaven. Meningen er at man enkelt skal kunne lese seg frem til løsningen.&lt;/p&gt;

&lt;p&gt;Jeg anbefaler at du går igjennom oppgavene &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; før du ser på min løsning. Kanskje du finner en bedre løsing enn meg. Står du fast kan du ta en titt på hvordan jeghar valgt å løse det.&lt;/p&gt;

&lt;p&gt;Min kode viser den fulle løsningen når du har gjennomført alle deloppgavene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;pingpong.gif&#34; alt=&#34;Animert bilde av PingPong&#34; title=&#34;Processing Pingpong&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;forklaring-av-koden:7e979b591601df796367c2e55b020eac&#34;&gt;Forklaring av koden&lt;/h2&gt;

&lt;h3 id=&#34;del-1-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 1: Ballen&lt;/h3&gt;

&lt;p&gt;Vi setter opp noen variabler for ballen. For eksempel farten den skal ha i både X-aksen og Y-aksen og størrelsen.
&lt;pre&gt;// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;ballx-og-bally:7e979b591601df796367c2e55b020eac&#34;&gt;ballX og ballY&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;ballX&lt;/i&gt; og &lt;i&gt;ballY&lt;/i&gt; har ingen verdi. Vi bare klargjør variablene for at vi skal kunne bruke dem senere.&lt;/p&gt;

&lt;h4 id=&#34;ballxfart-og-ballyfart:7e979b591601df796367c2e55b020eac&#34;&gt;ballXFart og ballYFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballXFart&lt;/i&gt; bestemmer hastigheten i X-aksen. Dvs. hastigheten ballen har mot venstre eller høyre.&lt;/p&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballYFart&lt;/i&gt; bestemmer hastigheten i Y-aksen. Dvs. hastigheten ballen har opp og ned.&lt;/p&gt;

&lt;h4 id=&#34;ballradius-og-balldiameter:7e979b591601df796367c2e55b020eac&#34;&gt;ballRadius og ballDiameter&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballRadius&lt;/i&gt; og &lt;i&gt;ballDiameter&lt;/i&gt; bestemmer størrelsen på ballen. Disse variablene bruker vi blant annet til å sjekke om kanten av ballen treffer en rekkert eller kanten av banen.&lt;/p&gt;

&lt;h3 id=&#34;del-2-rekkertene:7e979b591601df796367c2e55b020eac&#34;&gt;Del 2: Rekkertene&lt;/h3&gt;

&lt;p&gt;Vi setter opp variabler for to rekkerter. En som skal plasseres på venstre side og en på høyre side. De har begge samme størrelse. Likevel setter vi opp størrelsen for rekkert 1 og rekkert 2. Årsaken er at vi kommer til å endre størrelsen på rekkertene i spillet.
&lt;pre&gt;// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;rekkert1hoyde-og-rekkert2hoyde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkert1Hoyde og rekkert2Hoyde&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1Hoyde&lt;/i&gt; og &lt;i&gt;rekkert2Hoyde&lt;/i&gt; bestemmer høyden på de to rekkertene. Vi starter med lik høyde for begge to.&lt;/p&gt;

&lt;h4 id=&#34;rekkertbredde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertBredde&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertBredde&lt;/i&gt; bestemmer bredden på rekkertene. Her skiller vi ikke mellom de to rekkertene. De får samme bredde og derfor setter vi opp kun en felles variabel.&lt;/p&gt;

&lt;h4 id=&#34;rekkertfart:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertFart&lt;/i&gt; bestemmer hvor raskt rekkertene kan bevege seg. Vi lar begge rekkertene bevege seg like raskt og derfor deler de samme variabel.&lt;/p&gt;

&lt;pre&gt;// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;&lt;/pre&gt;

&lt;pre&gt;// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;&lt;/pre&gt;

&lt;h4 id=&#34;plassering-av-rekkerter:7e979b591601df796367c2e55b020eac&#34;&gt;Plassering av rekkerter&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1X&lt;/i&gt; og &lt;i&gt;rekkert1Y&lt;/i&gt; plasserer rekkert 1 (for spiller 1) helt til venstre på banen. Men variablene &lt;i&gt;rekkert2X&lt;/i&gt; og &lt;i&gt;rekkert2Y&lt;/i&gt; plasserer rekkert 2 (for spiller 2) helt til høyre på banen.&lt;/p&gt;

&lt;h3 id=&#34;del-3-poeng:7e979b591601df796367c2e55b020eac&#34;&gt;Del 3: Poeng&lt;/h3&gt;

&lt;p&gt;Vi setter poengene til 0 for begge spillerne
&lt;pre&gt;// Poeng
int spiller1 = 0;
int spiller2 = 0;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;spiller1-og-spiller2:7e979b591601df796367c2e55b020eac&#34;&gt;spiller1 og spiller2&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;spiller1&lt;/i&gt; og &lt;i&gt;spiller2&lt;/i&gt; er poengene de to spillerne har når spillet starter.&lt;/p&gt;

&lt;h3 id=&#34;del-4-det-olbigatoriske-oppsettet:7e979b591601df796367c2e55b020eac&#34;&gt;Del 4: Det olbigatoriske oppsettet&lt;/h3&gt;

&lt;p&gt;Vi setter størrelsen til 600x300 i henhld til oppgaven. Nå vi vet størrelsen så kan vi også sette ballens startposisjon.&lt;/p&gt;

&lt;pre&gt;void setup() {
  size(600,300);

  // Starposisjon for ball
  ballX = width / 2;
  ballY = height / 2;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-5-utregning-regler-og-opptegning:7e979b591601df796367c2e55b020eac&#34;&gt;Del 5: Utregning, regler og opptegning&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;VIKTIG!&lt;/strong&gt; All kode etter dette punktet legges til innen for draw(). Så vi begynner med å lage den.
&lt;pre&gt;void draw() {
    // All kode legger vi inn her
}&lt;/pre&gt;&lt;/p&gt;

&lt;h3 id=&#34;del-6-ballens-hastighet-og-fart:7e979b591601df796367c2e55b020eac&#34;&gt;Del 6: Ballens hastighet og fart&lt;/h3&gt;

&lt;p&gt;Vi angir ballens posisjon + fart i både X-aksen og Y-aksen&lt;/p&gt;

&lt;pre&gt;// Posisjon for ball
ballX = ballX + ballXFart;
ballY = ballY + ballYFart;&lt;/pre&gt;

&lt;h3 id=&#34;del-7-hva-skjer-med-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 7: Hva skjer med ballen&lt;/h3&gt;

&lt;p&gt;Hva skjer med ballen når den kommer utenfor kanten på venstre eller høyre side. Vi sjekker ballens posisjon mot kanten av &amp;ldquo;bordtennisbordet&amp;rdquo;.  Kommer den utenfor kanten så begynner den på nytt midt på bordet.&lt;/p&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor venstre side
if (ballX &lt; ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor høyre side 
if (ballX &gt; width - ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;p&gt;Hvis ballen treffet toppen eller bunnen så endrer vi retning ved sette på en minus (-) foran farten. Da snur ballen.&lt;/p&gt;

&lt;pre&gt;// Y-retning - sprett i toppen
if (ballY &lt; ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;pre&gt;// Y-retning - sprett i bunnen
if (ballY &gt; height - ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-8-når-ballen-treffer-rekkerten:7e979b591601df796367c2e55b020eac&#34;&gt;Del 8: Når ballen treffer rekkerten&lt;/h3&gt;

&lt;p&gt;Siden vi har lagt opp til at vi skal ha noen rekkerter så legger vi til noen &amp;ldquo;regler&amp;rdquo; via &lt;code&gt;if&lt;/code&gt;. Først legger vi til en regel for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på venstre side
if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
    if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
        ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
        ballXFart = -ballXFart; // Ny retning for ball i X-aksen
        rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
        spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
    }
}&lt;/pre&gt;

&lt;p&gt;Så legger vi til en &amp;ldquo;regel&amp;rdquo; for hva som skal hende med ballen når den treffer den andre rekkerten (for spiller 2).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på høyre side
if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
    if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
        ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
        ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
        rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
        spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
    }
}&lt;/pre&gt;

&lt;p&gt;Hvis vi ser på de to &amp;ldquo;reglene&amp;rdquo; for begge rekkertene så er de nesten like. Når ballen treffer rekkerten så endres retningen for ballen. I tillegg gjør vi noe lurt for å gjøre spillet litt vanskeligere. Høyden på rekkerten blir litt lavere for hver gang man &amp;ldquo;slår&amp;rdquo; ballen. Så får man et poeng.&lt;/p&gt;

&lt;h3 id=&#34;spilltaster:7e979b591601df796367c2e55b020eac&#34;&gt;Spilltaster&lt;/h3&gt;

&lt;p&gt;For å kunne spille så må man kunne kontrollere rekkertene. Dette gjøres ved å sjekke om det er en tast på tastaturet som blir trykket ned. Så sjekker vi hvilken tast det er og om det stemmer overens med de vi ønsker å bruke for å kontrollere en av rekkertene.&lt;/p&gt;

&lt;pre&gt;if (keyPressed) {
    // Kontroll av rekkert 2 (høyre side)
    if (keyCode == UP) {
        rekkert2Y = rekkert2Y - rekkertFart;
    }

    if (keyCode == DOWN) {
        rekkert2Y = rekkert2Y + rekkertFart;
    }

    // Kontroll av rekkert 1 (venstre side)
    if (key == &#39;w&#39;) {
        rekkert1Y = rekkert1Y - rekkertFart;
    }

    if (key == &#39;s&#39;) {
        rekkert1Y = rekkert1Y + rekkertFart;
    }
}&lt;/pre&gt;

&lt;p&gt;Som du ser i koden så bruker vi piltast opp og ned. De kontrollerer rekkerten til høyre (spiller 1). Mens &lt;i&gt;w&lt;/i&gt; og &lt;i&gt;s&lt;/i&gt; er for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;h3 id=&#34;del-9-tegn-opp-figurer:7e979b591601df796367c2e55b020eac&#34;&gt;Del 9: Tegn opp figurer&lt;/h3&gt;

&lt;p&gt;Nå skal vi oppdatere skjermen med alle de tall og variabler vi har angitt eller endret på.&lt;/p&gt;

&lt;pre&gt;
background(0);
ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
&lt;/pre&gt;

&lt;h3 id=&#34;del-10-komplett-kode:7e979b591601df796367c2e55b020eac&#34;&gt;Del 10: Komplett kode&lt;/h3&gt;

&lt;p&gt;Slik ser den ferdige koden ut.&lt;/p&gt;

&lt;pre&gt;
// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;

// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene

// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;

// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;

// Poeng
int spiller1 = 0;
int spiller2 = 0;


void setup() {
    size(600,300);
    
    smooth(2);
    // Starposisjon for ball
    ballX = width / 2;
    ballY = height / 2;
}

void draw() {
    // Posisjon for ball
    ballX = ballX + ballXFart;
    ballY = ballY + ballYFart;
    
    // Ny posisjon for ball hvis den kommer utenfor venstre side
    if (ballX &lt; ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }

    // Ny posisjon for ball hvis den kommer utenfor høyre side 
    if (ballX &gt; width - ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }
    
    // Y-retning - sprett i toppen
    if (ballY &lt; ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Y-retning - sprett i bunnen
    if (ballY &gt; height - ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Hvis ball treffer rekkert på venstre side
    if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
            if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
                ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
                ballXFart = -ballXFart; // Ny retning for ball i X-aksen
                rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
                spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
            }
    }
    
    // Hvis ball treffer rekkert på høyre side
    if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
            if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
                ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
                ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
                rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
                spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
            }
    }
    
    if (keyPressed) {
        // Kontroll av rekkert 2 (høyre side)
        if (keyCode == UP) {
            rekkert2Y = rekkert2Y - rekkertFart;
        }
        
        if (keyCode == DOWN) {
            rekkert2Y = rekkert2Y + rekkertFart;
        }

        // Kontroll av rekkert 1 (venstre side)
        if (key == &#39;w&#39;) {
            rekkert1Y = rekkert1Y - rekkertFart;
        }
        
        if (key == &#39;s&#39;) {
            rekkert1Y = rekkert1Y + rekkertFart;
        }
    }
    

    background(0);
    ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
    rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
    rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
    text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
    text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
}
&lt;/pre&gt;

&lt;p&gt;Klarer du å lage en autoplay som spiller spillet for deg?
Klarer du å legge på egne farger på de enkelte delene?
Klarer du å få flere poeng en din motstander?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lykke til!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kodeklubben, Processing og Ping-Pong (forslag til løsning)</title>
      <link>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</guid>
      <description>

&lt;p&gt;Dette er en kopi og gjennomgang av oppgaven &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; laget av Kodeklubben. Min løsning er langt ifra den mest effektive kode. Den tar utangspunkt i hvert steg i oppgaven. Meningen er at man enkelt skal kunne lese seg frem til løsningen.&lt;/p&gt;

&lt;p&gt;Jeg anbefaler at du går igjennom oppgavene &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; før du ser på min løsning. Kanskje du finner en bedre løsing enn meg. Står du fast kan du ta en titt på hvordan jeghar valgt å løse det.&lt;/p&gt;

&lt;p&gt;Min kode viser den fulle løsningen når du har gjennomført alle deloppgavene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;pingpong.gif&#34; alt=&#34;Animert bilde av PingPong&#34; title=&#34;Processing Pingpong&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;forklaring-av-koden:7e979b591601df796367c2e55b020eac&#34;&gt;Forklaring av koden&lt;/h2&gt;

&lt;h3 id=&#34;del-1-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 1: Ballen&lt;/h3&gt;

&lt;p&gt;Vi setter opp noen variabler for ballen. For eksempel farten den skal ha i både X-aksen og Y-aksen og størrelsen.
&lt;pre&gt;// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;ballx-og-bally:7e979b591601df796367c2e55b020eac&#34;&gt;ballX og ballY&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;ballX&lt;/i&gt; og &lt;i&gt;ballY&lt;/i&gt; har ingen verdi. Vi bare klargjør variablene for at vi skal kunne bruke dem senere.&lt;/p&gt;

&lt;h4 id=&#34;ballxfart-og-ballyfart:7e979b591601df796367c2e55b020eac&#34;&gt;ballXFart og ballYFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballXFart&lt;/i&gt; bestemmer hastigheten i X-aksen. Dvs. hastigheten ballen har mot venstre eller høyre.&lt;/p&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballYFart&lt;/i&gt; bestemmer hastigheten i Y-aksen. Dvs. hastigheten ballen har opp og ned.&lt;/p&gt;

&lt;h4 id=&#34;ballradius-og-balldiameter:7e979b591601df796367c2e55b020eac&#34;&gt;ballRadius og ballDiameter&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballRadius&lt;/i&gt; og &lt;i&gt;ballDiameter&lt;/i&gt; bestemmer størrelsen på ballen. Disse variablene bruker vi blant annet til å sjekke om kanten av ballen treffer en rekkert eller kanten av banen.&lt;/p&gt;

&lt;h3 id=&#34;del-2-rekkertene:7e979b591601df796367c2e55b020eac&#34;&gt;Del 2: Rekkertene&lt;/h3&gt;

&lt;p&gt;Vi setter opp variabler for to rekkerter. En som skal plasseres på venstre side og en på høyre side. De har begge samme størrelse. Likevel setter vi opp størrelsen for rekkert 1 og rekkert 2. Årsaken er at vi kommer til å endre størrelsen på rekkertene i spillet.
&lt;pre&gt;// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;rekkert1hoyde-og-rekkert2hoyde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkert1Hoyde og rekkert2Hoyde&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1Hoyde&lt;/i&gt; og &lt;i&gt;rekkert2Hoyde&lt;/i&gt; bestemmer høyden på de to rekkertene. Vi starter med lik høyde for begge to.&lt;/p&gt;

&lt;h4 id=&#34;rekkertbredde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertBredde&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertBredde&lt;/i&gt; bestemmer bredden på rekkertene. Her skiller vi ikke mellom de to rekkertene. De får samme bredde og derfor setter vi opp kun en felles variabel.&lt;/p&gt;

&lt;h4 id=&#34;rekkertfart:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertFart&lt;/i&gt; bestemmer hvor raskt rekkertene kan bevege seg. Vi lar begge rekkertene bevege seg like raskt og derfor deler de samme variabel.&lt;/p&gt;

&lt;pre&gt;// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;&lt;/pre&gt;

&lt;pre&gt;// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;&lt;/pre&gt;

&lt;h4 id=&#34;plassering-av-rekkerter:7e979b591601df796367c2e55b020eac&#34;&gt;Plassering av rekkerter&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1X&lt;/i&gt; og &lt;i&gt;rekkert1Y&lt;/i&gt; plasserer rekkert 1 (for spiller 1) helt til venstre på banen. Men variablene &lt;i&gt;rekkert2X&lt;/i&gt; og &lt;i&gt;rekkert2Y&lt;/i&gt; plasserer rekkert 2 (for spiller 2) helt til høyre på banen.&lt;/p&gt;

&lt;h3 id=&#34;del-3-poeng:7e979b591601df796367c2e55b020eac&#34;&gt;Del 3: Poeng&lt;/h3&gt;

&lt;p&gt;Vi setter poengene til 0 for begge spillerne
&lt;pre&gt;// Poeng
int spiller1 = 0;
int spiller2 = 0;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;spiller1-og-spiller2:7e979b591601df796367c2e55b020eac&#34;&gt;spiller1 og spiller2&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;spiller1&lt;/i&gt; og &lt;i&gt;spiller2&lt;/i&gt; er poengene de to spillerne har når spillet starter.&lt;/p&gt;

&lt;h3 id=&#34;del-4-det-olbigatoriske-oppsettet:7e979b591601df796367c2e55b020eac&#34;&gt;Del 4: Det olbigatoriske oppsettet&lt;/h3&gt;

&lt;p&gt;Vi setter størrelsen til 600x300 i henhld til oppgaven. Nå vi vet størrelsen så kan vi også sette ballens startposisjon.&lt;/p&gt;

&lt;pre&gt;void setup() {
  size(600,300);

  // Starposisjon for ball
  ballX = width / 2;
  ballY = height / 2;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-5-utregning-regler-og-opptegning:7e979b591601df796367c2e55b020eac&#34;&gt;Del 5: Utregning, regler og opptegning&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;VIKTIG!&lt;/strong&gt; All kode etter dette punktet legges til innen for draw(). Så vi begynner med å lage den.
&lt;pre&gt;void draw() {
    // All kode legger vi inn her
}&lt;/pre&gt;&lt;/p&gt;

&lt;h3 id=&#34;del-6-ballens-hastighet-og-fart:7e979b591601df796367c2e55b020eac&#34;&gt;Del 6: Ballens hastighet og fart&lt;/h3&gt;

&lt;p&gt;Vi angir ballens posisjon + fart i både X-aksen og Y-aksen&lt;/p&gt;

&lt;pre&gt;// Posisjon for ball
ballX = ballX + ballXFart;
ballY = ballY + ballYFart;&lt;/pre&gt;

&lt;h3 id=&#34;del-7-hva-skjer-med-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 7: Hva skjer med ballen&lt;/h3&gt;

&lt;p&gt;Hva skjer med ballen når den kommer utenfor kanten på venstre eller høyre side. Vi sjekker ballens posisjon mot kanten av &amp;ldquo;bordtennisbordet&amp;rdquo;.  Kommer den utenfor kanten så begynner den på nytt midt på bordet.&lt;/p&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor venstre side
if (ballX &lt; ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor høyre side 
if (ballX &gt; width - ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;p&gt;Hvis ballen treffet toppen eller bunnen så endrer vi retning ved sette på en minus (-) foran farten. Da snur ballen.&lt;/p&gt;

&lt;pre&gt;// Y-retning - sprett i toppen
if (ballY &lt; ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;pre&gt;// Y-retning - sprett i bunnen
if (ballY &gt; height - ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-8-når-ballen-treffer-rekkerten:7e979b591601df796367c2e55b020eac&#34;&gt;Del 8: Når ballen treffer rekkerten&lt;/h3&gt;

&lt;p&gt;Siden vi har lagt opp til at vi skal ha noen rekkerter så legger vi til noen &amp;ldquo;regler&amp;rdquo; via &lt;code&gt;if&lt;/code&gt;. Først legger vi til en regel for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på venstre side
if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
    if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
        ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
        ballXFart = -ballXFart; // Ny retning for ball i X-aksen
        rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
        spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
    }
}&lt;/pre&gt;

&lt;p&gt;Så legger vi til en &amp;ldquo;regel&amp;rdquo; for hva som skal hende med ballen når den treffer den andre rekkerten (for spiller 2).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på høyre side
if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
    if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
        ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
        ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
        rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
        spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
    }
}&lt;/pre&gt;

&lt;p&gt;Hvis vi ser på de to &amp;ldquo;reglene&amp;rdquo; for begge rekkertene så er de nesten like. Når ballen treffer rekkerten så endres retningen for ballen. I tillegg gjør vi noe lurt for å gjøre spillet litt vanskeligere. Høyden på rekkerten blir litt lavere for hver gang man &amp;ldquo;slår&amp;rdquo; ballen. Så får man et poeng.&lt;/p&gt;

&lt;h3 id=&#34;spilltaster:7e979b591601df796367c2e55b020eac&#34;&gt;Spilltaster&lt;/h3&gt;

&lt;p&gt;For å kunne spille så må man kunne kontrollere rekkertene. Dette gjøres ved å sjekke om det er en tast på tastaturet som blir trykket ned. Så sjekker vi hvilken tast det er og om det stemmer overens med de vi ønsker å bruke for å kontrollere en av rekkertene.&lt;/p&gt;

&lt;pre&gt;if (keyPressed) {
    // Kontroll av rekkert 2 (høyre side)
    if (keyCode == UP) {
        rekkert2Y = rekkert2Y - rekkertFart;
    }

    if (keyCode == DOWN) {
        rekkert2Y = rekkert2Y + rekkertFart;
    }

    // Kontroll av rekkert 1 (venstre side)
    if (key == &#39;w&#39;) {
        rekkert1Y = rekkert1Y - rekkertFart;
    }

    if (key == &#39;s&#39;) {
        rekkert1Y = rekkert1Y + rekkertFart;
    }
}&lt;/pre&gt;

&lt;p&gt;Som du ser i koden så bruker vi piltast opp og ned. De kontrollerer rekkerten til høyre (spiller 1). Mens &lt;i&gt;w&lt;/i&gt; og &lt;i&gt;s&lt;/i&gt; er for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;h3 id=&#34;del-9-tegn-opp-figurer:7e979b591601df796367c2e55b020eac&#34;&gt;Del 9: Tegn opp figurer&lt;/h3&gt;

&lt;p&gt;Nå skal vi oppdatere skjermen med alle de tall og variabler vi har angitt eller endret på.&lt;/p&gt;

&lt;pre&gt;
background(0);
ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
&lt;/pre&gt;

&lt;h3 id=&#34;del-10-komplett-kode:7e979b591601df796367c2e55b020eac&#34;&gt;Del 10: Komplett kode&lt;/h3&gt;

&lt;p&gt;Slik ser den ferdige koden ut.&lt;/p&gt;

&lt;pre&gt;
// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;

// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene

// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;

// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;

// Poeng
int spiller1 = 0;
int spiller2 = 0;


void setup() {
    size(600,300);
    
    smooth(2);
    // Starposisjon for ball
    ballX = width / 2;
    ballY = height / 2;
}

void draw() {
    // Posisjon for ball
    ballX = ballX + ballXFart;
    ballY = ballY + ballYFart;
    
    // Ny posisjon for ball hvis den kommer utenfor venstre side
    if (ballX &lt; ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }

    // Ny posisjon for ball hvis den kommer utenfor høyre side 
    if (ballX &gt; width - ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }
    
    // Y-retning - sprett i toppen
    if (ballY &lt; ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Y-retning - sprett i bunnen
    if (ballY &gt; height - ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Hvis ball treffer rekkert på venstre side
    if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
            if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
                ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
                ballXFart = -ballXFart; // Ny retning for ball i X-aksen
                rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
                spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
            }
    }
    
    // Hvis ball treffer rekkert på høyre side
    if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
            if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
                ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
                ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
                rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
                spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
            }
    }
    
    if (keyPressed) {
        // Kontroll av rekkert 2 (høyre side)
        if (keyCode == UP) {
            rekkert2Y = rekkert2Y - rekkertFart;
        }
        
        if (keyCode == DOWN) {
            rekkert2Y = rekkert2Y + rekkertFart;
        }

        // Kontroll av rekkert 1 (venstre side)
        if (key == &#39;w&#39;) {
            rekkert1Y = rekkert1Y - rekkertFart;
        }
        
        if (key == &#39;s&#39;) {
            rekkert1Y = rekkert1Y + rekkertFart;
        }
    }
    

    background(0);
    ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
    rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
    rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
    text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
    text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
}
&lt;/pre&gt;

&lt;p&gt;Klarer du å lage en autoplay som spiller spillet for deg?
Klarer du å legge på egne farger på de enkelte delene?
Klarer du å få flere poeng en din motstander?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lykke til!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kodeklubben, Processing og Ping-Pong (forslag til løsning)</title>
      <link>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</guid>
      <description>

&lt;p&gt;Dette er en kopi og gjennomgang av oppgaven &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; laget av Kodeklubben. Min løsning er langt ifra den mest effektive kode. Den tar utangspunkt i hvert steg i oppgaven. Meningen er at man enkelt skal kunne lese seg frem til løsningen.&lt;/p&gt;

&lt;p&gt;Jeg anbefaler at du går igjennom oppgavene &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; før du ser på min løsning. Kanskje du finner en bedre løsing enn meg. Står du fast kan du ta en titt på hvordan jeghar valgt å løse det.&lt;/p&gt;

&lt;p&gt;Min kode viser den fulle løsningen når du har gjennomført alle deloppgavene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;pingpong.gif&#34; alt=&#34;Animert bilde av PingPong&#34; title=&#34;Processing Pingpong&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;forklaring-av-koden:7e979b591601df796367c2e55b020eac&#34;&gt;Forklaring av koden&lt;/h2&gt;

&lt;h3 id=&#34;del-1-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 1: Ballen&lt;/h3&gt;

&lt;p&gt;Vi setter opp noen variabler for ballen. For eksempel farten den skal ha i både X-aksen og Y-aksen og størrelsen.
&lt;pre&gt;// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;ballx-og-bally:7e979b591601df796367c2e55b020eac&#34;&gt;ballX og ballY&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;ballX&lt;/i&gt; og &lt;i&gt;ballY&lt;/i&gt; har ingen verdi. Vi bare klargjør variablene for at vi skal kunne bruke dem senere.&lt;/p&gt;

&lt;h4 id=&#34;ballxfart-og-ballyfart:7e979b591601df796367c2e55b020eac&#34;&gt;ballXFart og ballYFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballXFart&lt;/i&gt; bestemmer hastigheten i X-aksen. Dvs. hastigheten ballen har mot venstre eller høyre.&lt;/p&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballYFart&lt;/i&gt; bestemmer hastigheten i Y-aksen. Dvs. hastigheten ballen har opp og ned.&lt;/p&gt;

&lt;h4 id=&#34;ballradius-og-balldiameter:7e979b591601df796367c2e55b020eac&#34;&gt;ballRadius og ballDiameter&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballRadius&lt;/i&gt; og &lt;i&gt;ballDiameter&lt;/i&gt; bestemmer størrelsen på ballen. Disse variablene bruker vi blant annet til å sjekke om kanten av ballen treffer en rekkert eller kanten av banen.&lt;/p&gt;

&lt;h3 id=&#34;del-2-rekkertene:7e979b591601df796367c2e55b020eac&#34;&gt;Del 2: Rekkertene&lt;/h3&gt;

&lt;p&gt;Vi setter opp variabler for to rekkerter. En som skal plasseres på venstre side og en på høyre side. De har begge samme størrelse. Likevel setter vi opp størrelsen for rekkert 1 og rekkert 2. Årsaken er at vi kommer til å endre størrelsen på rekkertene i spillet.
&lt;pre&gt;// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;rekkert1hoyde-og-rekkert2hoyde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkert1Hoyde og rekkert2Hoyde&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1Hoyde&lt;/i&gt; og &lt;i&gt;rekkert2Hoyde&lt;/i&gt; bestemmer høyden på de to rekkertene. Vi starter med lik høyde for begge to.&lt;/p&gt;

&lt;h4 id=&#34;rekkertbredde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertBredde&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertBredde&lt;/i&gt; bestemmer bredden på rekkertene. Her skiller vi ikke mellom de to rekkertene. De får samme bredde og derfor setter vi opp kun en felles variabel.&lt;/p&gt;

&lt;h4 id=&#34;rekkertfart:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertFart&lt;/i&gt; bestemmer hvor raskt rekkertene kan bevege seg. Vi lar begge rekkertene bevege seg like raskt og derfor deler de samme variabel.&lt;/p&gt;

&lt;pre&gt;// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;&lt;/pre&gt;

&lt;pre&gt;// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;&lt;/pre&gt;

&lt;h4 id=&#34;plassering-av-rekkerter:7e979b591601df796367c2e55b020eac&#34;&gt;Plassering av rekkerter&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1X&lt;/i&gt; og &lt;i&gt;rekkert1Y&lt;/i&gt; plasserer rekkert 1 (for spiller 1) helt til venstre på banen. Men variablene &lt;i&gt;rekkert2X&lt;/i&gt; og &lt;i&gt;rekkert2Y&lt;/i&gt; plasserer rekkert 2 (for spiller 2) helt til høyre på banen.&lt;/p&gt;

&lt;h3 id=&#34;del-3-poeng:7e979b591601df796367c2e55b020eac&#34;&gt;Del 3: Poeng&lt;/h3&gt;

&lt;p&gt;Vi setter poengene til 0 for begge spillerne
&lt;pre&gt;// Poeng
int spiller1 = 0;
int spiller2 = 0;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;spiller1-og-spiller2:7e979b591601df796367c2e55b020eac&#34;&gt;spiller1 og spiller2&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;spiller1&lt;/i&gt; og &lt;i&gt;spiller2&lt;/i&gt; er poengene de to spillerne har når spillet starter.&lt;/p&gt;

&lt;h3 id=&#34;del-4-det-olbigatoriske-oppsettet:7e979b591601df796367c2e55b020eac&#34;&gt;Del 4: Det olbigatoriske oppsettet&lt;/h3&gt;

&lt;p&gt;Vi setter størrelsen til 600x300 i henhld til oppgaven. Nå vi vet størrelsen så kan vi også sette ballens startposisjon.&lt;/p&gt;

&lt;pre&gt;void setup() {
  size(600,300);

  // Starposisjon for ball
  ballX = width / 2;
  ballY = height / 2;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-5-utregning-regler-og-opptegning:7e979b591601df796367c2e55b020eac&#34;&gt;Del 5: Utregning, regler og opptegning&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;VIKTIG!&lt;/strong&gt; All kode etter dette punktet legges til innen for draw(). Så vi begynner med å lage den.
&lt;pre&gt;void draw() {
    // All kode legger vi inn her
}&lt;/pre&gt;&lt;/p&gt;

&lt;h3 id=&#34;del-6-ballens-hastighet-og-fart:7e979b591601df796367c2e55b020eac&#34;&gt;Del 6: Ballens hastighet og fart&lt;/h3&gt;

&lt;p&gt;Vi angir ballens posisjon + fart i både X-aksen og Y-aksen&lt;/p&gt;

&lt;pre&gt;// Posisjon for ball
ballX = ballX + ballXFart;
ballY = ballY + ballYFart;&lt;/pre&gt;

&lt;h3 id=&#34;del-7-hva-skjer-med-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 7: Hva skjer med ballen&lt;/h3&gt;

&lt;p&gt;Hva skjer med ballen når den kommer utenfor kanten på venstre eller høyre side. Vi sjekker ballens posisjon mot kanten av &amp;ldquo;bordtennisbordet&amp;rdquo;.  Kommer den utenfor kanten så begynner den på nytt midt på bordet.&lt;/p&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor venstre side
if (ballX &lt; ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor høyre side 
if (ballX &gt; width - ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;p&gt;Hvis ballen treffet toppen eller bunnen så endrer vi retning ved sette på en minus (-) foran farten. Da snur ballen.&lt;/p&gt;

&lt;pre&gt;// Y-retning - sprett i toppen
if (ballY &lt; ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;pre&gt;// Y-retning - sprett i bunnen
if (ballY &gt; height - ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-8-når-ballen-treffer-rekkerten:7e979b591601df796367c2e55b020eac&#34;&gt;Del 8: Når ballen treffer rekkerten&lt;/h3&gt;

&lt;p&gt;Siden vi har lagt opp til at vi skal ha noen rekkerter så legger vi til noen &amp;ldquo;regler&amp;rdquo; via &lt;code&gt;if&lt;/code&gt;. Først legger vi til en regel for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på venstre side
if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
    if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
        ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
        ballXFart = -ballXFart; // Ny retning for ball i X-aksen
        rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
        spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
    }
}&lt;/pre&gt;

&lt;p&gt;Så legger vi til en &amp;ldquo;regel&amp;rdquo; for hva som skal hende med ballen når den treffer den andre rekkerten (for spiller 2).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på høyre side
if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
    if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
        ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
        ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
        rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
        spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
    }
}&lt;/pre&gt;

&lt;p&gt;Hvis vi ser på de to &amp;ldquo;reglene&amp;rdquo; for begge rekkertene så er de nesten like. Når ballen treffer rekkerten så endres retningen for ballen. I tillegg gjør vi noe lurt for å gjøre spillet litt vanskeligere. Høyden på rekkerten blir litt lavere for hver gang man &amp;ldquo;slår&amp;rdquo; ballen. Så får man et poeng.&lt;/p&gt;

&lt;h3 id=&#34;spilltaster:7e979b591601df796367c2e55b020eac&#34;&gt;Spilltaster&lt;/h3&gt;

&lt;p&gt;For å kunne spille så må man kunne kontrollere rekkertene. Dette gjøres ved å sjekke om det er en tast på tastaturet som blir trykket ned. Så sjekker vi hvilken tast det er og om det stemmer overens med de vi ønsker å bruke for å kontrollere en av rekkertene.&lt;/p&gt;

&lt;pre&gt;if (keyPressed) {
    // Kontroll av rekkert 2 (høyre side)
    if (keyCode == UP) {
        rekkert2Y = rekkert2Y - rekkertFart;
    }

    if (keyCode == DOWN) {
        rekkert2Y = rekkert2Y + rekkertFart;
    }

    // Kontroll av rekkert 1 (venstre side)
    if (key == &#39;w&#39;) {
        rekkert1Y = rekkert1Y - rekkertFart;
    }

    if (key == &#39;s&#39;) {
        rekkert1Y = rekkert1Y + rekkertFart;
    }
}&lt;/pre&gt;

&lt;p&gt;Som du ser i koden så bruker vi piltast opp og ned. De kontrollerer rekkerten til høyre (spiller 1). Mens &lt;i&gt;w&lt;/i&gt; og &lt;i&gt;s&lt;/i&gt; er for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;h3 id=&#34;del-9-tegn-opp-figurer:7e979b591601df796367c2e55b020eac&#34;&gt;Del 9: Tegn opp figurer&lt;/h3&gt;

&lt;p&gt;Nå skal vi oppdatere skjermen med alle de tall og variabler vi har angitt eller endret på.&lt;/p&gt;

&lt;pre&gt;
background(0);
ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
&lt;/pre&gt;

&lt;h3 id=&#34;del-10-komplett-kode:7e979b591601df796367c2e55b020eac&#34;&gt;Del 10: Komplett kode&lt;/h3&gt;

&lt;p&gt;Slik ser den ferdige koden ut.&lt;/p&gt;

&lt;pre&gt;
// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;

// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene

// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;

// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;

// Poeng
int spiller1 = 0;
int spiller2 = 0;


void setup() {
    size(600,300);
    
    smooth(2);
    // Starposisjon for ball
    ballX = width / 2;
    ballY = height / 2;
}

void draw() {
    // Posisjon for ball
    ballX = ballX + ballXFart;
    ballY = ballY + ballYFart;
    
    // Ny posisjon for ball hvis den kommer utenfor venstre side
    if (ballX &lt; ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }

    // Ny posisjon for ball hvis den kommer utenfor høyre side 
    if (ballX &gt; width - ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }
    
    // Y-retning - sprett i toppen
    if (ballY &lt; ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Y-retning - sprett i bunnen
    if (ballY &gt; height - ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Hvis ball treffer rekkert på venstre side
    if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
            if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
                ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
                ballXFart = -ballXFart; // Ny retning for ball i X-aksen
                rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
                spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
            }
    }
    
    // Hvis ball treffer rekkert på høyre side
    if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
            if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
                ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
                ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
                rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
                spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
            }
    }
    
    if (keyPressed) {
        // Kontroll av rekkert 2 (høyre side)
        if (keyCode == UP) {
            rekkert2Y = rekkert2Y - rekkertFart;
        }
        
        if (keyCode == DOWN) {
            rekkert2Y = rekkert2Y + rekkertFart;
        }

        // Kontroll av rekkert 1 (venstre side)
        if (key == &#39;w&#39;) {
            rekkert1Y = rekkert1Y - rekkertFart;
        }
        
        if (key == &#39;s&#39;) {
            rekkert1Y = rekkert1Y + rekkertFart;
        }
    }
    

    background(0);
    ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
    rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
    rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
    text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
    text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
}
&lt;/pre&gt;

&lt;p&gt;Klarer du å lage en autoplay som spiller spillet for deg?
Klarer du å legge på egne farger på de enkelte delene?
Klarer du å få flere poeng en din motstander?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lykke til!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetooth i en gammel FM-radio</title>
      <link>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</guid>
      <description>

&lt;p&gt;Jeg har en «gammel» radio som har vært en god følgesvenn av familien i noen år. Vi har egentlig aldri behandlet denne radioen noe spesielt godt. Den har alltid stått ute i vær og vind. Noe den bærer preg av. Men til tross for dårlig behandling så virker den som den skal.&lt;/p&gt;

&lt;p&gt;Dette innlegget er litt langt. Jeg har i detalj gått igjennom mine funn og forsøkt å dokumentere det med bilder som jeg har tatt underveis.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:1273d6887e1ec6d519742647e160a85b&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Ved å koble til en bluetooth-mottaker i en gammel radio så har jeg «byttet ut» den gamle FM-delene med noe mer moderne. Bakgrunnen er at jeg streamer 99% av all musikk og radio via mobiltelefonen. FM-nettet slukkes snart her i Norge og da ville radioen likevel være ubrukelig. Jeg har valgt å gjøre det på den vanskelige måten fremfor å koble en ferdig dongle direkte på inngangen. Større utfordring, mer morro.&lt;/p&gt;

&lt;p&gt;Det skulle vise seg å bli en større utfordring enn først antatt.&lt;/p&gt;

&lt;h2 id=&#34;denver-tr-43c:1273d6887e1ec6d519742647e160a85b&#34;&gt;Denver TR-43C&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135732.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;En Denver TR-43C i orange farge. Radioen er en typisk nobrand og selges under ulike merkenavn. Det jeg har klart å finne ut av via internett er at innmaten er lik uavhengig av merkenavnet den selges under.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135631.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Naturkreftene har forsøkt å ta tak i den. Jordslag og noe seigt belegg utenpå har dempet den ellers så friske orange fargen.&lt;/p&gt;

&lt;h2 id=&#34;fm-vs-dab-vs-streaming:1273d6887e1ec6d519742647e160a85b&#34;&gt;FM vs DAB vs streaming&lt;/h2&gt;

&lt;p&gt;Jeg skal ikke kaste meg i vei i diskusjonen om FM vs DAB. Men når FM-nettet slukkes om 2 år så vil vår gode og gamle FM-radio være mer eller mindre unyttig. Og siden vi streamer det meste av musikk via mobiltelefonen så kunne det vært kjekt å gjøre den gamle radioen om slik at den kan ta imot musikk via bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135640.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Denne antenna blir overflødig om et par år. Derfor velger jeg å bygge om radioen til å møte vårt behov og vår foretrukne måte å lytte til både musikk og radio på.&lt;/p&gt;

&lt;h2 id=&#34;valg-av-bluetooth:1273d6887e1ec6d519742647e160a85b&#34;&gt;Valg av bluetooth&lt;/h2&gt;

&lt;p&gt;Ja, jeg kunne selvsagt ha kjøpt en bluetooth-adapter til 50,- inkl. frakt på eBay og koblet den med en standard min jack-kablel på inngangen til radioen. Men hva er utfordringen i det?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135655.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Som bildet over viser så har radioen en egen lydinngang og en utgang for hodetelefoner. Via lydinngangen kunne jeg valgt å koble telefonen direkte eller brukt en billig bluetooth-dongle. Men som sagt, hva er utfordringen med det?&lt;/p&gt;

&lt;h2 id=&#34;bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Bluetooth LN-BT02&lt;/h2&gt;

&lt;p&gt;Så jeg handlet meg en bluetooth-sak med det kryptiske navnet LN-BT02. Slik ser den ut:&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/sku229677-61.jpg?w=700&amp;amp;h=700&#34; alt=&#34;LN-BT02&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Bildet over viser den medfølgende mikrofonen. I tillegg fulgte det med ulike kabler for strøm og lyd (inn og ut).&lt;/p&gt;

&lt;h2 id=&#34;demontering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Demontering&lt;/h2&gt;

&lt;p&gt;Radioen er enkel å skru fra hverandre. Tre skruer er tilgjengelig på baksiden. Den fjerde skruen en dekket av et deksel som dekker til strømtrafoen. Så dette dekselet må også skrues av.&lt;/p&gt;

&lt;p&gt;Det er ikke nødvendig å ta av bryter eller knotter på forsiden siden det er to kretskort og det som disse er koblet til er skrudd fast på dekselet foran.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_141126.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;strøm-til-bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Strøm til bluetooth (LN-BT02)&lt;/h2&gt;

&lt;p&gt;Selve radioen bruker enten vanlig strøm (230V) eller 6 batterier av type AA. Selve radioen bruker 9 – 12V (9V på batteridrift eller 12V ut ifra trafoen). Ved å bruke et multimeter så målte jeg 12V ferdig likerettet ut ifra trafoen (dvs. likeretteren sitter på kretskortet).&lt;/p&gt;

&lt;p&gt;LN-BT02 driftes fra 7V til 30V, så dette passet perfekt. Det er bare å lodde på strømledningen som følger med rett på kretskortet og LN-BT02 får strøm.&lt;/p&gt;

&lt;p&gt;NB! Det er kanskje ikke en god løsning å ha strøm rett på bluetooth-enheten hele tiden. Men enn så lenge så duger det slik at jeg kan komme meg videre til neste steg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154326.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Den røde og sorte som går rett opp i bildet over er strømmen til blåtannenheten.&lt;/p&gt;

&lt;h2 id=&#34;koble-til-lyd:1273d6887e1ec6d519742647e160a85b&#34;&gt;Koble til lyd&lt;/h2&gt;

&lt;p&gt;Blåtannenheten gir fra seg (ved fullt volum) standard linjesignal. Dvs. at den ikke kan koble direkte på en høyttaler, men signalet må via en forsterke. Dette finnes allerede i radioen.&lt;/p&gt;

&lt;p&gt;Jeg bruker multimeteret til å finne ut hvilket kontaktpunkter på kretskortet ved AUX-inngangen som er jord, høyre og venstre. Dermed lodder jeg på lydkabelen for blåtannenheten på disse punktene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154341.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;På undersiden av AUX-inngangen har jeg loddet på jord (sort) og høyre og venstre (hvit og rød) til kontaktpunktene til inngangen.&lt;/p&gt;

&lt;h3 id=&#34;første-problem-fm-og-blåtann-samtidig:1273d6887e1ec6d519742647e160a85b&#34;&gt;Første problem – FM og blåtann samtidig&lt;/h3&gt;

&lt;p&gt;Problemet er at radioen er laget på slik måte at hvis man ikke har en plugg inn i AUX-inngangen så aktiveres FM-radioen. Så nå vil radioen spille av FM-radio + lyd fra blåtann samtidig. Det er ikke helt heldig. Det er altså en bryter som aktiveres når man stikker en plugg inn i AUX-inngangen (som er en 3,5mm mini jack).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154402.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Jeg søker på internett etter denne type bryter / kontakt men finner kun noen dårlige skisser som ikke sier meg så mye. Så ved å bruke multimeteret mitt finner jeg til slutt to kontaktpunkter som endrer status avhengig av om det er en plugg inne i kontakten eller ei. Men jeg finner ingen enkel måte å deaktivere de på uten at det er en plugg satt inn.&lt;/p&gt;

&lt;h3 id=&#34;andre-problem-lydproblemer:1273d6887e1ec6d519742647e160a85b&#34;&gt;Andre problem – lydproblemer&lt;/h3&gt;

&lt;p&gt;Jeg lodder av kontakten med bryteren fra kretskortet. Når jeg løfter den av så faller en rekke deler ut av den. Fra bryteren altså. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg lodder så på igjen lydkabelen på de samme kontaktpunktene som tidligere. FM-radioen er nå deaktivert og jeg får lyd via blåtann. Men lyden er gått fra å være normal til å være svært svak. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg prøver å koble sammen kontaktpunktene for radio og får aktivert radioen igjen. Ikke noe endring av lydstyrken annet enn at FM-radioen nå spiller sammen med lyden fra blåtann. Så det er ikke løsningen, så jeg deaktiverer FM-radioen på nytt.&lt;/p&gt;

&lt;p&gt;På dette stadiet blir prosjektet liggende i mange dager. Siden jeg har en helt lik radio til så åpner jeg denne og kobler på lydkabelen. Full lydstyrke her. Så til tross for at jeg lodder på kabelen på samme punkter så er det en betydelig forskjell på før og etter at jeg tok av mini jack -kontakten. Hva som er årsaken vet jeg ikke. Man skulle tro det er en «mystisk» kobling inne i mini jack -kontakten som jeg overser. Et eller annet har jeg klart å ødelegge på veien.&lt;/p&gt;

&lt;p&gt;Utallige forsøk på å finne andre punkter å lodde lydkabelen inn på. Ingen av dem gir noe bedre resultat. Forsterkeren i radioen er og forblir død/svak.&lt;/p&gt;

&lt;h2 id=&#34;løsning-frankenstein:1273d6887e1ec6d519742647e160a85b&#34;&gt;Løsning – Frankenstein&lt;/h2&gt;

&lt;p&gt;Som nevn, jeg har en maken radio. En sort! Så med en rekke erfaringer klokere  så blir det den sorte broren til den oransje radioen som får gjennomgå. Bluetooth-enheten blir plassert inn her istedet.&lt;/p&gt;

&lt;p&gt;Her er noen bilder av den endelige løsningen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125724.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125730.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125738.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Ikke så pen løsning, jeg skulle kanskje ha kostet på meg egne knapper eller i det minste en Dremel fremfor et grovt bor.&lt;/p&gt;

&lt;p&gt;LN-BT02 har egne knapper for å hoppe en sang fremover, bakover og pause/play. Ved å holde nede venstre eller høyre knapp kan man også justere volumet.&lt;/p&gt;

&lt;h2 id=&#34;oppsummering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Oppsummering&lt;/h2&gt;

&lt;p&gt;Til tross for mye knoting og at prosjektet ble liggende urørt i en lang periode så kom jeg i havn. Jeg har lært litt og fått frisket opp gamle kunnskaper om elektronikk. Det irriterer meg fortsatt at jeg ikke fikk det til på første forsøk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125752.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetooth i en gammel FM-radio</title>
      <link>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</guid>
      <description>

&lt;p&gt;Jeg har en «gammel» radio som har vært en god følgesvenn av familien i noen år. Vi har egentlig aldri behandlet denne radioen noe spesielt godt. Den har alltid stått ute i vær og vind. Noe den bærer preg av. Men til tross for dårlig behandling så virker den som den skal.&lt;/p&gt;

&lt;p&gt;Dette innlegget er litt langt. Jeg har i detalj gått igjennom mine funn og forsøkt å dokumentere det med bilder som jeg har tatt underveis.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:1273d6887e1ec6d519742647e160a85b&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Ved å koble til en bluetooth-mottaker i en gammel radio så har jeg «byttet ut» den gamle FM-delene med noe mer moderne. Bakgrunnen er at jeg streamer 99% av all musikk og radio via mobiltelefonen. FM-nettet slukkes snart her i Norge og da ville radioen likevel være ubrukelig. Jeg har valgt å gjøre det på den vanskelige måten fremfor å koble en ferdig dongle direkte på inngangen. Større utfordring, mer morro.&lt;/p&gt;

&lt;p&gt;Det skulle vise seg å bli en større utfordring enn først antatt.&lt;/p&gt;

&lt;h2 id=&#34;denver-tr-43c:1273d6887e1ec6d519742647e160a85b&#34;&gt;Denver TR-43C&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135732.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;En Denver TR-43C i orange farge. Radioen er en typisk nobrand og selges under ulike merkenavn. Det jeg har klart å finne ut av via internett er at innmaten er lik uavhengig av merkenavnet den selges under.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135631.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Naturkreftene har forsøkt å ta tak i den. Jordslag og noe seigt belegg utenpå har dempet den ellers så friske orange fargen.&lt;/p&gt;

&lt;h2 id=&#34;fm-vs-dab-vs-streaming:1273d6887e1ec6d519742647e160a85b&#34;&gt;FM vs DAB vs streaming&lt;/h2&gt;

&lt;p&gt;Jeg skal ikke kaste meg i vei i diskusjonen om FM vs DAB. Men når FM-nettet slukkes om 2 år så vil vår gode og gamle FM-radio være mer eller mindre unyttig. Og siden vi streamer det meste av musikk via mobiltelefonen så kunne det vært kjekt å gjøre den gamle radioen om slik at den kan ta imot musikk via bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135640.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Denne antenna blir overflødig om et par år. Derfor velger jeg å bygge om radioen til å møte vårt behov og vår foretrukne måte å lytte til både musikk og radio på.&lt;/p&gt;

&lt;h2 id=&#34;valg-av-bluetooth:1273d6887e1ec6d519742647e160a85b&#34;&gt;Valg av bluetooth&lt;/h2&gt;

&lt;p&gt;Ja, jeg kunne selvsagt ha kjøpt en bluetooth-adapter til 50,- inkl. frakt på eBay og koblet den med en standard min jack-kablel på inngangen til radioen. Men hva er utfordringen i det?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135655.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Som bildet over viser så har radioen en egen lydinngang og en utgang for hodetelefoner. Via lydinngangen kunne jeg valgt å koble telefonen direkte eller brukt en billig bluetooth-dongle. Men som sagt, hva er utfordringen med det?&lt;/p&gt;

&lt;h2 id=&#34;bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Bluetooth LN-BT02&lt;/h2&gt;

&lt;p&gt;Så jeg handlet meg en bluetooth-sak med det kryptiske navnet LN-BT02. Slik ser den ut:&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/sku229677-61.jpg?w=700&amp;amp;h=700&#34; alt=&#34;LN-BT02&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Bildet over viser den medfølgende mikrofonen. I tillegg fulgte det med ulike kabler for strøm og lyd (inn og ut).&lt;/p&gt;

&lt;h2 id=&#34;demontering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Demontering&lt;/h2&gt;

&lt;p&gt;Radioen er enkel å skru fra hverandre. Tre skruer er tilgjengelig på baksiden. Den fjerde skruen en dekket av et deksel som dekker til strømtrafoen. Så dette dekselet må også skrues av.&lt;/p&gt;

&lt;p&gt;Det er ikke nødvendig å ta av bryter eller knotter på forsiden siden det er to kretskort og det som disse er koblet til er skrudd fast på dekselet foran.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_141126.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;strøm-til-bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Strøm til bluetooth (LN-BT02)&lt;/h2&gt;

&lt;p&gt;Selve radioen bruker enten vanlig strøm (230V) eller 6 batterier av type AA. Selve radioen bruker 9 – 12V (9V på batteridrift eller 12V ut ifra trafoen). Ved å bruke et multimeter så målte jeg 12V ferdig likerettet ut ifra trafoen (dvs. likeretteren sitter på kretskortet).&lt;/p&gt;

&lt;p&gt;LN-BT02 driftes fra 7V til 30V, så dette passet perfekt. Det er bare å lodde på strømledningen som følger med rett på kretskortet og LN-BT02 får strøm.&lt;/p&gt;

&lt;p&gt;NB! Det er kanskje ikke en god løsning å ha strøm rett på bluetooth-enheten hele tiden. Men enn så lenge så duger det slik at jeg kan komme meg videre til neste steg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154326.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Den røde og sorte som går rett opp i bildet over er strømmen til blåtannenheten.&lt;/p&gt;

&lt;h2 id=&#34;koble-til-lyd:1273d6887e1ec6d519742647e160a85b&#34;&gt;Koble til lyd&lt;/h2&gt;

&lt;p&gt;Blåtannenheten gir fra seg (ved fullt volum) standard linjesignal. Dvs. at den ikke kan koble direkte på en høyttaler, men signalet må via en forsterke. Dette finnes allerede i radioen.&lt;/p&gt;

&lt;p&gt;Jeg bruker multimeteret til å finne ut hvilket kontaktpunkter på kretskortet ved AUX-inngangen som er jord, høyre og venstre. Dermed lodder jeg på lydkabelen for blåtannenheten på disse punktene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154341.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;På undersiden av AUX-inngangen har jeg loddet på jord (sort) og høyre og venstre (hvit og rød) til kontaktpunktene til inngangen.&lt;/p&gt;

&lt;h3 id=&#34;første-problem-fm-og-blåtann-samtidig:1273d6887e1ec6d519742647e160a85b&#34;&gt;Første problem – FM og blåtann samtidig&lt;/h3&gt;

&lt;p&gt;Problemet er at radioen er laget på slik måte at hvis man ikke har en plugg inn i AUX-inngangen så aktiveres FM-radioen. Så nå vil radioen spille av FM-radio + lyd fra blåtann samtidig. Det er ikke helt heldig. Det er altså en bryter som aktiveres når man stikker en plugg inn i AUX-inngangen (som er en 3,5mm mini jack).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154402.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Jeg søker på internett etter denne type bryter / kontakt men finner kun noen dårlige skisser som ikke sier meg så mye. Så ved å bruke multimeteret mitt finner jeg til slutt to kontaktpunkter som endrer status avhengig av om det er en plugg inne i kontakten eller ei. Men jeg finner ingen enkel måte å deaktivere de på uten at det er en plugg satt inn.&lt;/p&gt;

&lt;h3 id=&#34;andre-problem-lydproblemer:1273d6887e1ec6d519742647e160a85b&#34;&gt;Andre problem – lydproblemer&lt;/h3&gt;

&lt;p&gt;Jeg lodder av kontakten med bryteren fra kretskortet. Når jeg løfter den av så faller en rekke deler ut av den. Fra bryteren altså. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg lodder så på igjen lydkabelen på de samme kontaktpunktene som tidligere. FM-radioen er nå deaktivert og jeg får lyd via blåtann. Men lyden er gått fra å være normal til å være svært svak. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg prøver å koble sammen kontaktpunktene for radio og får aktivert radioen igjen. Ikke noe endring av lydstyrken annet enn at FM-radioen nå spiller sammen med lyden fra blåtann. Så det er ikke løsningen, så jeg deaktiverer FM-radioen på nytt.&lt;/p&gt;

&lt;p&gt;På dette stadiet blir prosjektet liggende i mange dager. Siden jeg har en helt lik radio til så åpner jeg denne og kobler på lydkabelen. Full lydstyrke her. Så til tross for at jeg lodder på kabelen på samme punkter så er det en betydelig forskjell på før og etter at jeg tok av mini jack -kontakten. Hva som er årsaken vet jeg ikke. Man skulle tro det er en «mystisk» kobling inne i mini jack -kontakten som jeg overser. Et eller annet har jeg klart å ødelegge på veien.&lt;/p&gt;

&lt;p&gt;Utallige forsøk på å finne andre punkter å lodde lydkabelen inn på. Ingen av dem gir noe bedre resultat. Forsterkeren i radioen er og forblir død/svak.&lt;/p&gt;

&lt;h2 id=&#34;løsning-frankenstein:1273d6887e1ec6d519742647e160a85b&#34;&gt;Løsning – Frankenstein&lt;/h2&gt;

&lt;p&gt;Som nevn, jeg har en maken radio. En sort! Så med en rekke erfaringer klokere  så blir det den sorte broren til den oransje radioen som får gjennomgå. Bluetooth-enheten blir plassert inn her istedet.&lt;/p&gt;

&lt;p&gt;Her er noen bilder av den endelige løsningen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125724.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125730.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125738.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Ikke så pen løsning, jeg skulle kanskje ha kostet på meg egne knapper eller i det minste en Dremel fremfor et grovt bor.&lt;/p&gt;

&lt;p&gt;LN-BT02 har egne knapper for å hoppe en sang fremover, bakover og pause/play. Ved å holde nede venstre eller høyre knapp kan man også justere volumet.&lt;/p&gt;

&lt;h2 id=&#34;oppsummering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Oppsummering&lt;/h2&gt;

&lt;p&gt;Til tross for mye knoting og at prosjektet ble liggende urørt i en lang periode så kom jeg i havn. Jeg har lært litt og fått frisket opp gamle kunnskaper om elektronikk. Det irriterer meg fortsatt at jeg ikke fikk det til på første forsøk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125752.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetooth i en gammel FM-radio</title>
      <link>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</guid>
      <description>

&lt;p&gt;Jeg har en «gammel» radio som har vært en god følgesvenn av familien i noen år. Vi har egentlig aldri behandlet denne radioen noe spesielt godt. Den har alltid stått ute i vær og vind. Noe den bærer preg av. Men til tross for dårlig behandling så virker den som den skal.&lt;/p&gt;

&lt;p&gt;Dette innlegget er litt langt. Jeg har i detalj gått igjennom mine funn og forsøkt å dokumentere det med bilder som jeg har tatt underveis.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:1273d6887e1ec6d519742647e160a85b&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Ved å koble til en bluetooth-mottaker i en gammel radio så har jeg «byttet ut» den gamle FM-delene med noe mer moderne. Bakgrunnen er at jeg streamer 99% av all musikk og radio via mobiltelefonen. FM-nettet slukkes snart her i Norge og da ville radioen likevel være ubrukelig. Jeg har valgt å gjøre det på den vanskelige måten fremfor å koble en ferdig dongle direkte på inngangen. Større utfordring, mer morro.&lt;/p&gt;

&lt;p&gt;Det skulle vise seg å bli en større utfordring enn først antatt.&lt;/p&gt;

&lt;h2 id=&#34;denver-tr-43c:1273d6887e1ec6d519742647e160a85b&#34;&gt;Denver TR-43C&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135732.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;En Denver TR-43C i orange farge. Radioen er en typisk nobrand og selges under ulike merkenavn. Det jeg har klart å finne ut av via internett er at innmaten er lik uavhengig av merkenavnet den selges under.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135631.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Naturkreftene har forsøkt å ta tak i den. Jordslag og noe seigt belegg utenpå har dempet den ellers så friske orange fargen.&lt;/p&gt;

&lt;h2 id=&#34;fm-vs-dab-vs-streaming:1273d6887e1ec6d519742647e160a85b&#34;&gt;FM vs DAB vs streaming&lt;/h2&gt;

&lt;p&gt;Jeg skal ikke kaste meg i vei i diskusjonen om FM vs DAB. Men når FM-nettet slukkes om 2 år så vil vår gode og gamle FM-radio være mer eller mindre unyttig. Og siden vi streamer det meste av musikk via mobiltelefonen så kunne det vært kjekt å gjøre den gamle radioen om slik at den kan ta imot musikk via bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135640.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Denne antenna blir overflødig om et par år. Derfor velger jeg å bygge om radioen til å møte vårt behov og vår foretrukne måte å lytte til både musikk og radio på.&lt;/p&gt;

&lt;h2 id=&#34;valg-av-bluetooth:1273d6887e1ec6d519742647e160a85b&#34;&gt;Valg av bluetooth&lt;/h2&gt;

&lt;p&gt;Ja, jeg kunne selvsagt ha kjøpt en bluetooth-adapter til 50,- inkl. frakt på eBay og koblet den med en standard min jack-kablel på inngangen til radioen. Men hva er utfordringen i det?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135655.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Som bildet over viser så har radioen en egen lydinngang og en utgang for hodetelefoner. Via lydinngangen kunne jeg valgt å koble telefonen direkte eller brukt en billig bluetooth-dongle. Men som sagt, hva er utfordringen med det?&lt;/p&gt;

&lt;h2 id=&#34;bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Bluetooth LN-BT02&lt;/h2&gt;

&lt;p&gt;Så jeg handlet meg en bluetooth-sak med det kryptiske navnet LN-BT02. Slik ser den ut:&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/sku229677-61.jpg?w=700&amp;amp;h=700&#34; alt=&#34;LN-BT02&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Bildet over viser den medfølgende mikrofonen. I tillegg fulgte det med ulike kabler for strøm og lyd (inn og ut).&lt;/p&gt;

&lt;h2 id=&#34;demontering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Demontering&lt;/h2&gt;

&lt;p&gt;Radioen er enkel å skru fra hverandre. Tre skruer er tilgjengelig på baksiden. Den fjerde skruen en dekket av et deksel som dekker til strømtrafoen. Så dette dekselet må også skrues av.&lt;/p&gt;

&lt;p&gt;Det er ikke nødvendig å ta av bryter eller knotter på forsiden siden det er to kretskort og det som disse er koblet til er skrudd fast på dekselet foran.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_141126.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;strøm-til-bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Strøm til bluetooth (LN-BT02)&lt;/h2&gt;

&lt;p&gt;Selve radioen bruker enten vanlig strøm (230V) eller 6 batterier av type AA. Selve radioen bruker 9 – 12V (9V på batteridrift eller 12V ut ifra trafoen). Ved å bruke et multimeter så målte jeg 12V ferdig likerettet ut ifra trafoen (dvs. likeretteren sitter på kretskortet).&lt;/p&gt;

&lt;p&gt;LN-BT02 driftes fra 7V til 30V, så dette passet perfekt. Det er bare å lodde på strømledningen som følger med rett på kretskortet og LN-BT02 får strøm.&lt;/p&gt;

&lt;p&gt;NB! Det er kanskje ikke en god løsning å ha strøm rett på bluetooth-enheten hele tiden. Men enn så lenge så duger det slik at jeg kan komme meg videre til neste steg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154326.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Den røde og sorte som går rett opp i bildet over er strømmen til blåtannenheten.&lt;/p&gt;

&lt;h2 id=&#34;koble-til-lyd:1273d6887e1ec6d519742647e160a85b&#34;&gt;Koble til lyd&lt;/h2&gt;

&lt;p&gt;Blåtannenheten gir fra seg (ved fullt volum) standard linjesignal. Dvs. at den ikke kan koble direkte på en høyttaler, men signalet må via en forsterke. Dette finnes allerede i radioen.&lt;/p&gt;

&lt;p&gt;Jeg bruker multimeteret til å finne ut hvilket kontaktpunkter på kretskortet ved AUX-inngangen som er jord, høyre og venstre. Dermed lodder jeg på lydkabelen for blåtannenheten på disse punktene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154341.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;På undersiden av AUX-inngangen har jeg loddet på jord (sort) og høyre og venstre (hvit og rød) til kontaktpunktene til inngangen.&lt;/p&gt;

&lt;h3 id=&#34;første-problem-fm-og-blåtann-samtidig:1273d6887e1ec6d519742647e160a85b&#34;&gt;Første problem – FM og blåtann samtidig&lt;/h3&gt;

&lt;p&gt;Problemet er at radioen er laget på slik måte at hvis man ikke har en plugg inn i AUX-inngangen så aktiveres FM-radioen. Så nå vil radioen spille av FM-radio + lyd fra blåtann samtidig. Det er ikke helt heldig. Det er altså en bryter som aktiveres når man stikker en plugg inn i AUX-inngangen (som er en 3,5mm mini jack).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154402.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Jeg søker på internett etter denne type bryter / kontakt men finner kun noen dårlige skisser som ikke sier meg så mye. Så ved å bruke multimeteret mitt finner jeg til slutt to kontaktpunkter som endrer status avhengig av om det er en plugg inne i kontakten eller ei. Men jeg finner ingen enkel måte å deaktivere de på uten at det er en plugg satt inn.&lt;/p&gt;

&lt;h3 id=&#34;andre-problem-lydproblemer:1273d6887e1ec6d519742647e160a85b&#34;&gt;Andre problem – lydproblemer&lt;/h3&gt;

&lt;p&gt;Jeg lodder av kontakten med bryteren fra kretskortet. Når jeg løfter den av så faller en rekke deler ut av den. Fra bryteren altså. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg lodder så på igjen lydkabelen på de samme kontaktpunktene som tidligere. FM-radioen er nå deaktivert og jeg får lyd via blåtann. Men lyden er gått fra å være normal til å være svært svak. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg prøver å koble sammen kontaktpunktene for radio og får aktivert radioen igjen. Ikke noe endring av lydstyrken annet enn at FM-radioen nå spiller sammen med lyden fra blåtann. Så det er ikke løsningen, så jeg deaktiverer FM-radioen på nytt.&lt;/p&gt;

&lt;p&gt;På dette stadiet blir prosjektet liggende i mange dager. Siden jeg har en helt lik radio til så åpner jeg denne og kobler på lydkabelen. Full lydstyrke her. Så til tross for at jeg lodder på kabelen på samme punkter så er det en betydelig forskjell på før og etter at jeg tok av mini jack -kontakten. Hva som er årsaken vet jeg ikke. Man skulle tro det er en «mystisk» kobling inne i mini jack -kontakten som jeg overser. Et eller annet har jeg klart å ødelegge på veien.&lt;/p&gt;

&lt;p&gt;Utallige forsøk på å finne andre punkter å lodde lydkabelen inn på. Ingen av dem gir noe bedre resultat. Forsterkeren i radioen er og forblir død/svak.&lt;/p&gt;

&lt;h2 id=&#34;løsning-frankenstein:1273d6887e1ec6d519742647e160a85b&#34;&gt;Løsning – Frankenstein&lt;/h2&gt;

&lt;p&gt;Som nevn, jeg har en maken radio. En sort! Så med en rekke erfaringer klokere  så blir det den sorte broren til den oransje radioen som får gjennomgå. Bluetooth-enheten blir plassert inn her istedet.&lt;/p&gt;

&lt;p&gt;Her er noen bilder av den endelige løsningen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125724.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125730.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125738.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Ikke så pen løsning, jeg skulle kanskje ha kostet på meg egne knapper eller i det minste en Dremel fremfor et grovt bor.&lt;/p&gt;

&lt;p&gt;LN-BT02 har egne knapper for å hoppe en sang fremover, bakover og pause/play. Ved å holde nede venstre eller høyre knapp kan man også justere volumet.&lt;/p&gt;

&lt;h2 id=&#34;oppsummering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Oppsummering&lt;/h2&gt;

&lt;p&gt;Til tross for mye knoting og at prosjektet ble liggende urørt i en lang periode så kom jeg i havn. Jeg har lært litt og fått frisket opp gamle kunnskaper om elektronikk. Det irriterer meg fortsatt at jeg ikke fikk det til på første forsøk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125752.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino Nano, NewPing og HC-SR04</title>
      <link>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</guid>
      <description>

&lt;p&gt;Dette innlegget er egentlig veldig likt innlegget jeg skrev om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt; og innlegget om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/03/arduino-og-hc-sr04-ultrasonisk-sensor/&#34;&gt;Arduino og HC-SR04 (ultrasonisk sensor)&lt;/a&gt;. Likevel er det noen forskjeller som gjør det verdt å skrive om.&lt;/p&gt;

&lt;p&gt;Jeg har brukt en Arduino Nano V3.0 og HC-SR04 på et koblingsbrett. I motsetning til de to foregående eksemplene hvor jeg har skrevet om ultrasonisk sensor så har jeg benyttet meg av et bibliotek som heter NewPing (som du kan kan &lt;a href=&#34;https://bitbucket.org/teckel12/arduino-new-ping/wiki/Home&#34;&gt;laste ned fra BitBucket&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Det er flere fordeler ved å bruke NewPing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mer nøyaktig avlesning&lt;/li&gt;
&lt;li&gt;Henger &lt;strong&gt;ikke&lt;/strong&gt; i et sekund ved feil avlesning&lt;/li&gt;
&lt;li&gt;Man kan sette maks avstand for avstand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;++ flere du kan lese om på &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing&#34;&gt;Arduino Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Årsaken til at jeg har byttet fra standard Arduino-kode til NewPing sitt bibliotek var at jeg oppdaget at oppsettet trakk veldig my strøm og ved bruk av batteri så tømte batteriene seg raskt.&lt;/p&gt;

&lt;p&gt;Det gjenstår å teste Nano og NewPing med batteri.&lt;/p&gt;

&lt;h2 id=&#34;skisse:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;Skissen viser hvordan jeg valgte å koble opp min Nano og HC-SR04.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/nano-hcsr04_bb.png?w=700&amp;amp;h=585&#34; alt=&#34;Arduino Nano og HC-SR04 skisse&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Koden jeg har testet med er &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing?action=sourceblock&amp;amp;num=1&#34;&gt;standard eksempelet til NewPing&lt;/a&gt;. Eneste endringen jeg har gjort er å endre hvilken port som benyttes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino Nano, NewPing og HC-SR04</title>
      <link>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</guid>
      <description>

&lt;p&gt;Dette innlegget er egentlig veldig likt innlegget jeg skrev om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt; og innlegget om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/03/arduino-og-hc-sr04-ultrasonisk-sensor/&#34;&gt;Arduino og HC-SR04 (ultrasonisk sensor)&lt;/a&gt;. Likevel er det noen forskjeller som gjør det verdt å skrive om.&lt;/p&gt;

&lt;p&gt;Jeg har brukt en Arduino Nano V3.0 og HC-SR04 på et koblingsbrett. I motsetning til de to foregående eksemplene hvor jeg har skrevet om ultrasonisk sensor så har jeg benyttet meg av et bibliotek som heter NewPing (som du kan kan &lt;a href=&#34;https://bitbucket.org/teckel12/arduino-new-ping/wiki/Home&#34;&gt;laste ned fra BitBucket&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Det er flere fordeler ved å bruke NewPing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mer nøyaktig avlesning&lt;/li&gt;
&lt;li&gt;Henger &lt;strong&gt;ikke&lt;/strong&gt; i et sekund ved feil avlesning&lt;/li&gt;
&lt;li&gt;Man kan sette maks avstand for avstand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;++ flere du kan lese om på &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing&#34;&gt;Arduino Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Årsaken til at jeg har byttet fra standard Arduino-kode til NewPing sitt bibliotek var at jeg oppdaget at oppsettet trakk veldig my strøm og ved bruk av batteri så tømte batteriene seg raskt.&lt;/p&gt;

&lt;p&gt;Det gjenstår å teste Nano og NewPing med batteri.&lt;/p&gt;

&lt;h2 id=&#34;skisse:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;Skissen viser hvordan jeg valgte å koble opp min Nano og HC-SR04.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/nano-hcsr04_bb.png?w=700&amp;amp;h=585&#34; alt=&#34;Arduino Nano og HC-SR04 skisse&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Koden jeg har testet med er &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing?action=sourceblock&amp;amp;num=1&#34;&gt;standard eksempelet til NewPing&lt;/a&gt;. Eneste endringen jeg har gjort er å endre hvilken port som benyttes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino Nano, NewPing og HC-SR04</title>
      <link>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</guid>
      <description>

&lt;p&gt;Dette innlegget er egentlig veldig likt innlegget jeg skrev om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt; og innlegget om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/03/arduino-og-hc-sr04-ultrasonisk-sensor/&#34;&gt;Arduino og HC-SR04 (ultrasonisk sensor)&lt;/a&gt;. Likevel er det noen forskjeller som gjør det verdt å skrive om.&lt;/p&gt;

&lt;p&gt;Jeg har brukt en Arduino Nano V3.0 og HC-SR04 på et koblingsbrett. I motsetning til de to foregående eksemplene hvor jeg har skrevet om ultrasonisk sensor så har jeg benyttet meg av et bibliotek som heter NewPing (som du kan kan &lt;a href=&#34;https://bitbucket.org/teckel12/arduino-new-ping/wiki/Home&#34;&gt;laste ned fra BitBucket&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Det er flere fordeler ved å bruke NewPing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mer nøyaktig avlesning&lt;/li&gt;
&lt;li&gt;Henger &lt;strong&gt;ikke&lt;/strong&gt; i et sekund ved feil avlesning&lt;/li&gt;
&lt;li&gt;Man kan sette maks avstand for avstand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;++ flere du kan lese om på &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing&#34;&gt;Arduino Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Årsaken til at jeg har byttet fra standard Arduino-kode til NewPing sitt bibliotek var at jeg oppdaget at oppsettet trakk veldig my strøm og ved bruk av batteri så tømte batteriene seg raskt.&lt;/p&gt;

&lt;p&gt;Det gjenstår å teste Nano og NewPing med batteri.&lt;/p&gt;

&lt;h2 id=&#34;skisse:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;Skissen viser hvordan jeg valgte å koble opp min Nano og HC-SR04.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/nano-hcsr04_bb.png?w=700&amp;amp;h=585&#34; alt=&#34;Arduino Nano og HC-SR04 skisse&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Koden jeg har testet med er &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing?action=sourceblock&amp;amp;num=1&#34;&gt;standard eksempelet til NewPing&lt;/a&gt;. Eneste endringen jeg har gjort er å endre hvilken port som benyttes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Koble Arduino til internett via USB</title>
      <link>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</guid>
      <description>

&lt;p&gt;Det er mulig for en Arduino å skrive verdier til eller lese verdier fra internett via USB. Ikke så optimal løsning som å bruke eternetshield eller wifi, men dog mulig. Dette innlegget er et eksempel på hvordan jeg har lest av en verdi fra en fil som er tilgjengelig på internett og videresender denne verdien til min Arduino.&lt;/p&gt;

&lt;p&gt;Målet vårt her er å lese av en verdi (et tall) fra en tekstfil som ligger på internett og så få LED (på pinne 13) til å blinke like mange ganger som verdien. Et veldig enkelt eksempel.&lt;/p&gt;

&lt;h2 id=&#34;hva-trenger-man:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hva trenger man?&lt;/h2&gt;

&lt;p&gt;Når du allerede er komme til dette steget regner jeg med at du har en Arduino, USB-kabel og en datamaskin med Arduino IDE innstallert. Det du trenger i tillegg er et program Processing.&lt;/p&gt;

&lt;h3 id=&#34;processing:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Processing?&lt;/h3&gt;

&lt;p&gt;Processing kan brukes til så mangt. Det vi skal bruke det til er å lese av en fil fra internett og sende den informasjonen videre til vår Arduino som er koble til via USB. Processing IDE er så likt Arduino IDE at når du skal programere så vil du lett kjenne deg igjen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Koble Arduino til internett via USB</title>
      <link>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</guid>
      <description>

&lt;p&gt;Det er mulig for en Arduino å skrive verdier til eller lese verdier fra internett via USB. Ikke så optimal løsning som å bruke eternetshield eller wifi, men dog mulig. Dette innlegget er et eksempel på hvordan jeg har lest av en verdi fra en fil som er tilgjengelig på internett og videresender denne verdien til min Arduino.&lt;/p&gt;

&lt;p&gt;Målet vårt her er å lese av en verdi (et tall) fra en tekstfil som ligger på internett og så få LED (på pinne 13) til å blinke like mange ganger som verdien. Et veldig enkelt eksempel.&lt;/p&gt;

&lt;h2 id=&#34;hva-trenger-man:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hva trenger man?&lt;/h2&gt;

&lt;p&gt;Når du allerede er komme til dette steget regner jeg med at du har en Arduino, USB-kabel og en datamaskin med Arduino IDE innstallert. Det du trenger i tillegg er et program Processing.&lt;/p&gt;

&lt;h3 id=&#34;processing:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Processing?&lt;/h3&gt;

&lt;p&gt;Processing kan brukes til så mangt. Det vi skal bruke det til er å lese av en fil fra internett og sende den informasjonen videre til vår Arduino som er koble til via USB. Processing IDE er så likt Arduino IDE at når du skal programere så vil du lett kjenne deg igjen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Koble Arduino til internett via USB</title>
      <link>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</guid>
      <description>

&lt;p&gt;Det er mulig for en Arduino å skrive verdier til eller lese verdier fra internett via USB. Ikke så optimal løsning som å bruke eternetshield eller wifi, men dog mulig. Dette innlegget er et eksempel på hvordan jeg har lest av en verdi fra en fil som er tilgjengelig på internett og videresender denne verdien til min Arduino.&lt;/p&gt;

&lt;p&gt;Målet vårt her er å lese av en verdi (et tall) fra en tekstfil som ligger på internett og så få LED (på pinne 13) til å blinke like mange ganger som verdien. Et veldig enkelt eksempel.&lt;/p&gt;

&lt;h2 id=&#34;hva-trenger-man:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hva trenger man?&lt;/h2&gt;

&lt;p&gt;Når du allerede er komme til dette steget regner jeg med at du har en Arduino, USB-kabel og en datamaskin med Arduino IDE innstallert. Det du trenger i tillegg er et program Processing.&lt;/p&gt;

&lt;h3 id=&#34;processing:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Processing?&lt;/h3&gt;

&lt;p&gt;Processing kan brukes til så mangt. Det vi skal bruke det til er å lese av en fil fra internett og sende den informasjonen videre til vår Arduino som er koble til via USB. Processing IDE er så likt Arduino IDE at når du skal programere så vil du lett kjenne deg igjen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og HC-SR04 (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette innlegget er neste identisk med mitt innlegg &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt;. Eneste forskjellen er bytte av sen ultrasoniske sensoren. Både Ping oh HC-SR04 er populære sensorer å koble til Arduino. I bunn og grunn helt like produkter men med en stor forskjell – antall pinner. Ping har 3 mens HC-SR04 har 4 pinner. Derfor blir koblingskjemaet og koden bittelitt forskjellig.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;En ultrasonisk sensor måler avstanden til et objekt. Basert på avstanden så vil tre ulike LED lyse opp. Grønn LED lyser ved avstand over 25cm. Orange LED lyser ved avstand mellom 10 og 25 cm. Rød LED lyser ved avstand under 10 cm.&lt;/p&gt;

&lt;h2 id=&#34;skisse:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png&#34;&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png?w=700&amp;amp;h=361&#34; alt=&#34;hcsr04-2_bb&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hc-sr04:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;HC-SR04&lt;/h2&gt;

&lt;p&gt;HC-SR04 har 4 pinner:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VCC – 5V (positiv)&lt;/li&gt;
&lt;li&gt;Trig – signal inn fra Arduino (trigger)&lt;/li&gt;
&lt;li&gt;Echo – signal ut fra&lt;/li&gt;
&lt;li&gt;Gnd – jord (negativ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fordelen med fire pinner er at programmet til Arduinoen slipper å skifte mellom inn- og utgang på samme pinne.&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En HC-SR04 er like enkelt å sette opp og bruke som en Ping. Er man nybegynner så er det kanskje lettere å forstå programeringen med 4 pinner kontra 3 pinner. Man sender inn et signal og får straks svar tilbake på den andre pinnen.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og HC-SR04 (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette innlegget er neste identisk med mitt innlegg &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt;. Eneste forskjellen er bytte av sen ultrasoniske sensoren. Både Ping oh HC-SR04 er populære sensorer å koble til Arduino. I bunn og grunn helt like produkter men med en stor forskjell – antall pinner. Ping har 3 mens HC-SR04 har 4 pinner. Derfor blir koblingskjemaet og koden bittelitt forskjellig.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;En ultrasonisk sensor måler avstanden til et objekt. Basert på avstanden så vil tre ulike LED lyse opp. Grønn LED lyser ved avstand over 25cm. Orange LED lyser ved avstand mellom 10 og 25 cm. Rød LED lyser ved avstand under 10 cm.&lt;/p&gt;

&lt;h2 id=&#34;skisse:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png&#34;&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png?w=700&amp;amp;h=361&#34; alt=&#34;hcsr04-2_bb&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hc-sr04:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;HC-SR04&lt;/h2&gt;

&lt;p&gt;HC-SR04 har 4 pinner:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VCC – 5V (positiv)&lt;/li&gt;
&lt;li&gt;Trig – signal inn fra Arduino (trigger)&lt;/li&gt;
&lt;li&gt;Echo – signal ut fra&lt;/li&gt;
&lt;li&gt;Gnd – jord (negativ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fordelen med fire pinner er at programmet til Arduinoen slipper å skifte mellom inn- og utgang på samme pinne.&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En HC-SR04 er like enkelt å sette opp og bruke som en Ping. Er man nybegynner så er det kanskje lettere å forstå programeringen med 4 pinner kontra 3 pinner. Man sender inn et signal og får straks svar tilbake på den andre pinnen.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og HC-SR04 (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette innlegget er neste identisk med mitt innlegg &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt;. Eneste forskjellen er bytte av sen ultrasoniske sensoren. Både Ping oh HC-SR04 er populære sensorer å koble til Arduino. I bunn og grunn helt like produkter men med en stor forskjell – antall pinner. Ping har 3 mens HC-SR04 har 4 pinner. Derfor blir koblingskjemaet og koden bittelitt forskjellig.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;En ultrasonisk sensor måler avstanden til et objekt. Basert på avstanden så vil tre ulike LED lyse opp. Grønn LED lyser ved avstand over 25cm. Orange LED lyser ved avstand mellom 10 og 25 cm. Rød LED lyser ved avstand under 10 cm.&lt;/p&gt;

&lt;h2 id=&#34;skisse:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png&#34;&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png?w=700&amp;amp;h=361&#34; alt=&#34;hcsr04-2_bb&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hc-sr04:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;HC-SR04&lt;/h2&gt;

&lt;p&gt;HC-SR04 har 4 pinner:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VCC – 5V (positiv)&lt;/li&gt;
&lt;li&gt;Trig – signal inn fra Arduino (trigger)&lt;/li&gt;
&lt;li&gt;Echo – signal ut fra&lt;/li&gt;
&lt;li&gt;Gnd – jord (negativ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fordelen med fire pinner er at programmet til Arduinoen slipper å skifte mellom inn- og utgang på samme pinne.&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En HC-SR04 er like enkelt å sette opp og bruke som en Ping. Er man nybegynner så er det kanskje lettere å forstå programeringen med 4 pinner kontra 3 pinner. Man sender inn et signal og får straks svar tilbake på den andre pinnen.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>