<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SJSD - blogg og notater om mine DIY</title>
    <link>http://sjsd.github.io/post/</link>
    <description>Recent content in Posts on SJSD - blogg og notater om mine DIY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>no-nb</language>
    <managingEditor>helge.johnsen@outlook.com (Helge Johnsen)</managingEditor>
    <webMaster>helge.johnsen@outlook.com (Helge Johnsen)</webMaster>
    <lastBuildDate>Sun, 01 May 2016 12:55:46 +0200</lastBuildDate>
    <atom:link href="http://sjsd.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Arduino, lydsensor og 433MHz kommunikasjon</title>
      <link>http://sjsd.github.io/post/arduino-soundsensor-wireless-433mhz/</link>
      <pubDate>Sun, 01 May 2016 12:55:46 +0200</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/arduino-soundsensor-wireless-433mhz/</guid>
      <description>

&lt;p&gt;Dette er en del av et litt større prosjekt jeg jobber med. Det er ikke sikkert dette er den endelige løsningen for prosjektet mitt, men det er en del av det å prøve å feile.&lt;/p&gt;

&lt;h2 id=&#34;hardware:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Hardware&lt;/h2&gt;

&lt;p&gt;I oppsettet har jeg to Arduinoer, en lydsensor, et sett 433Mhz RF (sender og mottaker) og LED. Jeg har da «krydret» det med å bruke en &lt;a href=&#34;https://www.adafruit.com/products/3039&#34; title=&#34;Adafruit Neopixel stick&#34;&gt;Adafruit Neopixel stick&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lydsensoren er av en type som kun oppfatter volum og ikke type lyd. Så om det er ei bjelle, en hund som bjeffer eller rock &amp;lsquo;n&amp;rsquo; roll så har det ikke noe å si. Man kan via et potmeter på sensoren justere hvor høy lyden må være for at den skal reagere. Når lydsensoren oppfatter en lyd og den lyden er høy nok så gir den fra seg et digital signal (HIGH eller LOW). Så sensoren blir koblet til en digital inngang på Arduinoen.&lt;/p&gt;

&lt;h2 id=&#34;slik-fungerer-det:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Slik fungerer det&lt;/h2&gt;

&lt;p&gt;Lydsensoren oppfatter en lyd (som er høy nok i volum) og gir fra seg et digitalt signal. Arduinoen oppfatter signalet og sender så en beskjed via 433MHz-senderen.&lt;/p&gt;

&lt;p&gt;433MHz-mottakeren tar imot det trådløse radiosignalet. Arduinoen den er koblet til oppfatter dette og blinker så med LED-lyset/ene.&lt;/p&gt;

&lt;h3 id=&#34;video:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Video&lt;/h3&gt;

&lt;p&gt;Her er en kort video som viser hvordan det fungerer. NB! Dette er første gang jeg spiller inn en video hvor jeg snakker. Den er uforbredt og klønete. Jeg filmet med mobiltelefonen og lyden ble veldig lav. Så husk å skru ned lyden igjen etterpå.&lt;/p&gt;

&lt;iframe width=&#34;768&#34; height=&#34;432&#34; src=&#34;https://www.youtube.com/embed/DW3e2ElfMIw?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;I videoen så ser du at jeg har koblet på et LED-lys på koblingsbrettet for senderen. Dette lyser når Arduinoen har mottatt et signal og sender et signal videre. Jeg brukte dette lyset til «feilsøking» når jeg jobbet med det. Det samme har jeg koblet på mottakeren. Et LED-lys som blinker når den mottar et signal.&lt;/p&gt;

&lt;h2 id=&#34;koblinger:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Koblinger&lt;/h2&gt;

&lt;p&gt;Jeg har ingen skjema over koblingene siden Fritzing mangler flere at komponentene jeg har brukt. Så her kommer en kort skriftlig forklaring.&lt;/p&gt;

&lt;h3 id=&#34;lydsensoren:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Lydsensoren&lt;/h3&gt;

&lt;p&gt;Lydsensoren er koblet til 5V, GND og D2.&lt;/p&gt;

&lt;h3 id=&#34;rf-senderen:676f01acec179ba34e80d79ca9ddd325&#34;&gt;RF-senderen&lt;/h3&gt;

&lt;p&gt;RF-senderen er koblet til 5V, GND og D12.&lt;/p&gt;

&lt;h3 id=&#34;led-på-arduino-en-som-sender:676f01acec179ba34e80d79ca9ddd325&#34;&gt;LED på Arduino en som sender&lt;/h3&gt;

&lt;p&gt;LED er koblet til D7 og GND med en motstand i mellom.&lt;/p&gt;

&lt;h3 id=&#34;rf-mottaker:676f01acec179ba34e80d79ca9ddd325&#34;&gt;RF-mottaker&lt;/h3&gt;

&lt;p&gt;RD-mottaker er koblet til 5V, GND og D11.&lt;/p&gt;

&lt;h3 id=&#34;led-på-arduino-med-mottaker:676f01acec179ba34e80d79ca9ddd325&#34;&gt;LED på Arduino med mottaker&lt;/h3&gt;

&lt;p&gt;LED er koblet til D13 og GND.&lt;/p&gt;

&lt;h2 id=&#34;kode:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;I koden under har jeg forenklet den og fjernet den delen som går på Neopixel. En enkel måte å bruke 433MHz sender og mottaker på er å bruke et bibliotek.&lt;/p&gt;

&lt;h3 id=&#34;radiohead:676f01acec179ba34e80d79ca9ddd325&#34;&gt;RadioHead&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.airspayce.com/mikem/arduino/RadioHead/RadioHead-1.41.zip&#34; title=&#34;Last ned &#34;&gt;RadioHead&lt;/a&gt; gjør det enkelt å sette opp og kommunisere med 433MHz-enhetene. Det finnes flere tilsvarende bibliotek. Så du får bruke det du selv føler er best.&lt;/p&gt;

&lt;p&gt;Trenger du en rask innføring så kan jeg anbefale &lt;a href=&#34;http://randomnerdtutorials.com/rf-433mhz-transmitter-receiver-module-with-arduino/&#34; title=&#34;Complete Guide for RF 433MHz Transmitter/Receiver Module With Arduino&#34;&gt;denne guiden&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;kode-for-lydsensor-og-sender:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Kode for lydsensor og sender&lt;/h3&gt;

&lt;pre&gt;#include &amp;#60;RH_ASK.h&amp;#62;
#include &amp;#60;SPI.h&amp;#62;
RH_ASK driver;

int ledPin = 7;
int inPin = 2;
int volume = 0;

void setup() {
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT);
  pinMode(inPin, INPUT);
  digitalWrite(ledPin, LOW);
    if (!driver.init())
         Serial.println(&#34;init failed&#34;);
}

void loop() {
  volume = digitalRead(inPin);
  if (volume &gt; 0) {
    digitalWrite(ledPin, HIGH);
    const char *msg = &#34;Hello World!&#34;;
    driver.send((uint8_t *)msg, strlen(msg));
    driver.waitPacketSent();
    delay(1000);
    digitalWrite(ledPin,LOW);
  }
}&lt;/pre&gt;

&lt;h3 id=&#34;kode-for-mottaker-og-neopixel:676f01acec179ba34e80d79ca9ddd325&#34;&gt;Kode for mottaker og Neopixel&lt;/h3&gt;

&lt;pre&gt;// Signal inn fra mottaker skal på pin 11.
#include &amp;#60;RH_ASK.h&amp;#62;
#include &amp;#60;SPI.h&amp;#62; // Not actualy used but needed to compile
RH_ASK driver;&lt;/pre&gt;

&lt;pre&gt;// Led for å blink når signal mottatt
int led = 13;&lt;/pre&gt;

&lt;pre&gt;void setup()
{
    Serial.begin(9600); // Debugging only
    pinMode(led, OUTPUT);

    if (!driver.init())
         Serial.println(&#34;init failed&#34;);
}&lt;/pre&gt;

&lt;pre&gt;void loop()
{
    uint8_t buf[12];
    uint8_t buflen = sizeof(buf);
    
    if (driver.recv(buf, &amp;buflen))
    {
      Serial.println((char*)buf);
      digitalWrite(led, HIGH);
      delay(2000);
      digitalWrite(led, LOW);      
    }
}&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Arduino lydsensor</title>
      <link>http://sjsd.github.io/post/arduino-sounddetector/</link>
      <pubDate>Fri, 29 Apr 2016 17:31:44 +0200</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/arduino-sounddetector/</guid>
      <description>

&lt;p&gt;Dette innlegget er en del av et større prosjekt jeg jobber med. Dette innlegget har jeg skrevet mest som et notat til meg selv.&lt;/p&gt;

&lt;h2 id=&#34;arduino-med-lydsensor:a9e8a9351c137e733c312648c9a0c333&#34;&gt;Arduino med lydsensor&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;soundsensor.jpg&#34;&gt;&lt;br /&gt;
Dette er en enkel lydsensor. Den ikke kan si noe om lydstyrken eller hva slags lyd den reagerer på. Det mest korrekte er å si at den reagerer på volum fremfor lyd. Man kan justere en grenseverdi for styrken på volumet. Altså hvor høy lyden må være før den reagerer og sender fra seg et signal.&lt;/p&gt;

&lt;p&gt;Når sensoren reagerer på et lyd, dvs. den reagerer på et angitt volum, så vil den sende fra seg et signal. Sensoren er koblet til en digital inngang på Arduinoen.&lt;/p&gt;

&lt;h3 id=&#34;koden:a9e8a9351c137e733c312648c9a0c333&#34;&gt;Koden&lt;/h3&gt;

&lt;p&gt;Denne koden er veldig enkel. Jeg har koblet sensoren til digital ïnngang 2 og en LED til digital utgang 7.
&lt;pre&gt;int ledPin = 7;
int inPin = 2;
int volume = 0;&lt;/pre&gt;&lt;/p&gt;

&lt;pre&gt;void setup() {
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT);
  pinMode(inPin, INPUT);
  digitalWrite(ledPin, LOW);
}&lt;/pre&gt;

&lt;pre&gt;void loop() {
  volume = digitalRead(inPin);
  if (volume &gt; 0) {
    Serial.println(volume);
    digitalWrite(ledPin, HIGH);
    delay(50);
    digitalWrite(ledPin,LOW);
  }
}&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Kodeklubben, Processing og Ping-Pong (forslag til løsning)</title>
      <link>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</link>
      <pubDate>Sun, 03 Apr 2016 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/kodeklubben-processing-pingpong/</guid>
      <description>

&lt;p&gt;Dette er min gjennomgang av oppgaven &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; laget av Kodeklubben. Min løsning er langt ifra den mest effektive koden. Tanken min er at man enkelt skal kunne lese seg frem til løsningen.&lt;/p&gt;

&lt;p&gt;Jeg anbefaler at du går igjennom oppgavene &lt;a href=&#34;http://kodeklubben.github.io/processing/pingpong/pingpong.html&#34; title=&#34;Ping pong for Processing, Kodeklubben&#34;&gt;Ping pong for Processing&lt;/a&gt; før du ser på mitt forslag til løsning. Kanskje du finner en bedre løsning enn meg? Står du fast kan du ta en titt på hvordan jeg har valgt å løse utfordringene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;pingpong.gif&#34; alt=&#34;Animert bilde av PingPong&#34; title=&#34;Processing Pingpong&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;forklaring-av-koden:7e979b591601df796367c2e55b020eac&#34;&gt;Forklaring av koden&lt;/h2&gt;

&lt;h3 id=&#34;del-1-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 1: Ballen&lt;/h3&gt;

&lt;p&gt;Vi setter opp noen variabler for ballen. For eksempel farten den skal ha i både X-aksen og Y-aksen og størrelsen.
&lt;pre&gt;// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;ballx-og-bally:7e979b591601df796367c2e55b020eac&#34;&gt;ballX og ballY&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;ballX&lt;/i&gt; og &lt;i&gt;ballY&lt;/i&gt; har ingen verdi. Vi bare forteller programmet at vi senere kommer til å bruke disse variablene og at de skal være av typen &lt;i&gt;float&lt;/i&gt;.&lt;/p&gt;

&lt;h4 id=&#34;ballxfart-og-ballyfart:7e979b591601df796367c2e55b020eac&#34;&gt;ballXFart og ballYFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballXFart&lt;/i&gt; bestemmer hastigheten i X-aksen. Dvs. hastigheten ballen har mot venstre eller høyre.&lt;/p&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballYFart&lt;/i&gt; bestemmer hastigheten i Y-aksen. Dvs. hastigheten ballen har opp og ned.&lt;/p&gt;

&lt;h4 id=&#34;ballradius-og-balldiameter:7e979b591601df796367c2e55b020eac&#34;&gt;ballRadius og ballDiameter&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;ballRadius&lt;/i&gt; og &lt;i&gt;ballDiameter&lt;/i&gt; bestemmer størrelsen på ballen. Disse variablene bruker vi blant annet til å sjekke om kanten av ballen treffer en rekkert eller kanten av banen.&lt;/p&gt;

&lt;h3 id=&#34;del-2-rekkertene:7e979b591601df796367c2e55b020eac&#34;&gt;Del 2: Rekkertene&lt;/h3&gt;

&lt;p&gt;Vi setter opp variabler for to rekkerter. En som skal plasseres på venstre side og en på høyre side. De har begge samme størrelse. Likevel setter vi opp størrelsen for rekkert 1 og rekkert 2. Årsaken er at vi kommer til å endre størrelsen på rekkertene i spillet.
&lt;pre&gt;// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;rekkert1hoyde-og-rekkert2hoyde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkert1Hoyde og rekkert2Hoyde&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1Hoyde&lt;/i&gt; og &lt;i&gt;rekkert2Hoyde&lt;/i&gt; bestemmer høyden på de to rekkertene. Vi starter med lik høyde for begge to.&lt;/p&gt;

&lt;h4 id=&#34;rekkertbredde:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertBredde&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertBredde&lt;/i&gt; bestemmer bredden på rekkertene. Her skiller vi ikke mellom de to rekkertene. De får samme bredde og derfor setter vi opp kun en felles variabel.&lt;/p&gt;

&lt;h4 id=&#34;rekkertfart:7e979b591601df796367c2e55b020eac&#34;&gt;rekkertFart&lt;/h4&gt;

&lt;p&gt;Variabelen &lt;i&gt;rekkertFart&lt;/i&gt; bestemmer hvor raskt rekkertene kan bevege seg. Vi lar begge rekkertene bevege seg like raskt og derfor deler de samme variabel.&lt;/p&gt;

&lt;pre&gt;// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;&lt;/pre&gt;

&lt;pre&gt;// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;&lt;/pre&gt;

&lt;h4 id=&#34;plassering-av-rekkerter:7e979b591601df796367c2e55b020eac&#34;&gt;Plassering av rekkerter&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;rekkert1X&lt;/i&gt; og &lt;i&gt;rekkert1Y&lt;/i&gt; plasserer rekkert 1 (for spiller 1) helt til venstre på banen. Men variablene &lt;i&gt;rekkert2X&lt;/i&gt; og &lt;i&gt;rekkert2Y&lt;/i&gt; plasserer rekkert 2 (for spiller 2) helt til høyre på banen.&lt;/p&gt;

&lt;h3 id=&#34;del-3-poeng:7e979b591601df796367c2e55b020eac&#34;&gt;Del 3: Poeng&lt;/h3&gt;

&lt;p&gt;Vi setter poengene til 0 for begge spillerne
&lt;pre&gt;// Poeng
int spiller1 = 0;
int spiller2 = 0;&lt;/pre&gt;&lt;/p&gt;

&lt;h4 id=&#34;spiller1-og-spiller2:7e979b591601df796367c2e55b020eac&#34;&gt;spiller1 og spiller2&lt;/h4&gt;

&lt;p&gt;Variablene &lt;i&gt;spiller1&lt;/i&gt; og &lt;i&gt;spiller2&lt;/i&gt; er poengene de to spillerne har når spillet starter.&lt;/p&gt;

&lt;h3 id=&#34;del-4-det-olbigatoriske-oppsettet:7e979b591601df796367c2e55b020eac&#34;&gt;Del 4: Det olbigatoriske oppsettet&lt;/h3&gt;

&lt;p&gt;Vi setter størrelsen til 600x300 i henhold til oppgaven. Nå vi vet størrelsen så kan vi også sette ballens startposisjon.&lt;/p&gt;

&lt;pre&gt;void setup() {
  size(600,300);

  // Starposisjon for ball
  ballX = width / 2;
  ballY = height / 2;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-5-utregning-regler-og-opptegning:7e979b591601df796367c2e55b020eac&#34;&gt;Del 5: Utregning, regler og opptegning&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;VIKTIG!&lt;/strong&gt; All kode etter dette punktet legges til innen for draw(). Så vi begynner med å lage den.
&lt;pre&gt;void draw() {
    // All kode legger vi inn her
}&lt;/pre&gt;&lt;/p&gt;

&lt;h3 id=&#34;del-6-ballens-hastighet-og-fart:7e979b591601df796367c2e55b020eac&#34;&gt;Del 6: Ballens hastighet og fart&lt;/h3&gt;

&lt;p&gt;Vi angir ballens posisjon + fart i både X-aksen og Y-aksen&lt;/p&gt;

&lt;pre&gt;// Posisjon for ball
ballX = ballX + ballXFart;
ballY = ballY + ballYFart;&lt;/pre&gt;

&lt;h3 id=&#34;del-7-hva-skjer-med-ballen:7e979b591601df796367c2e55b020eac&#34;&gt;Del 7: Hva skjer med ballen&lt;/h3&gt;

&lt;p&gt;Hva skjer med ballen når den kommer utenfor kanten på venstre eller høyre side. Vi sjekker ballens posisjon mot kanten av &amp;ldquo;bordtennisbordet&amp;rdquo;.  Kommer den utenfor kanten så begynner den på nytt midt på bordet.&lt;/p&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor venstre side
if (ballX &lt; ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;pre&gt;// Ny posisjon for ball hvis den kommer utenfor høyre side 
if (ballX &gt; width - ballRadius) {
    ballX = width / 2;
    ballY = height / 2;
}&lt;/pre&gt;

&lt;p&gt;Hvis ballen treffet toppen eller bunnen så endrer vi retning ved sette på en minus (-) foran farten. Da snur ballen.&lt;/p&gt;

&lt;pre&gt;// Y-retning - sprett i toppen
if (ballY &lt; ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;pre&gt;// Y-retning - sprett i bunnen
if (ballY &gt; height - ballRadius) {
    ballYFart = -ballYFart;
}&lt;/pre&gt;

&lt;h3 id=&#34;del-8-når-ballen-treffer-rekkerten:7e979b591601df796367c2e55b020eac&#34;&gt;Del 8: Når ballen treffer rekkerten&lt;/h3&gt;

&lt;p&gt;Siden vi har lagt opp til at vi skal ha noen rekkerter så legger vi til noen &amp;ldquo;regler&amp;rdquo; via &lt;code&gt;if&lt;/code&gt;. Først legger vi til en regel for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på venstre side
if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
    if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
        ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
        ballXFart = -ballXFart; // Ny retning for ball i X-aksen
        rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
        spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
    }
}&lt;/pre&gt;

&lt;p&gt;Så legger vi til en &amp;ldquo;regel&amp;rdquo; for hva som skal hende med ballen når den treffer den andre rekkerten (for spiller 2).&lt;/p&gt;

&lt;pre&gt;// Hvis ball treffer rekkert på høyre side
if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
    if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
        ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
        ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
        rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
        spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
    }
}&lt;/pre&gt;

&lt;p&gt;Hvis vi ser på de to &amp;ldquo;reglene&amp;rdquo; for begge rekkertene så er de nesten like. Når ballen treffer rekkerten så endres retningen for ballen. I tillegg gjør vi noe lurt for å gjøre spillet litt vanskeligere. Høyden på rekkerten blir litt lavere for hver gang man &amp;ldquo;slår&amp;rdquo; ballen. Så får man et poeng.&lt;/p&gt;

&lt;h3 id=&#34;spilltaster:7e979b591601df796367c2e55b020eac&#34;&gt;Spilltaster&lt;/h3&gt;

&lt;p&gt;For å kunne spille så må man kunne kontrollere rekkertene. Dette gjøres ved å sjekke om det er en tast på tastaturet som blir trykket ned. Så sjekker vi hvilken tast det er og om det stemmer overens med de vi ønsker å bruke for å kontrollere en av rekkertene.&lt;/p&gt;

&lt;pre&gt;if (keyPressed) {
    // Kontroll av rekkert 2 (høyre side)
    if (keyCode == UP) {
        rekkert2Y = rekkert2Y - rekkertFart;
    }

    if (keyCode == DOWN) {
        rekkert2Y = rekkert2Y + rekkertFart;
    }

    // Kontroll av rekkert 1 (venstre side)
    if (key == &#39;w&#39;) {
        rekkert1Y = rekkert1Y - rekkertFart;
    }

    if (key == &#39;s&#39;) {
        rekkert1Y = rekkert1Y + rekkertFart;
    }
}&lt;/pre&gt;

&lt;p&gt;Som du ser i koden så bruker vi piltast opp og ned. De kontrollerer rekkerten til høyre (spiller 1). Mens &lt;i&gt;w&lt;/i&gt; og &lt;i&gt;s&lt;/i&gt; er for rekkerten til venstre (spiller 1).&lt;/p&gt;

&lt;h3 id=&#34;del-9-tegn-opp-figurer:7e979b591601df796367c2e55b020eac&#34;&gt;Del 9: Tegn opp figurer&lt;/h3&gt;

&lt;p&gt;Nå skal vi oppdatere skjermen med alle de tall og variabler vi har angitt eller endret på.&lt;/p&gt;

&lt;pre&gt;
background(0);
ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
&lt;/pre&gt;

&lt;h3 id=&#34;del-10-komplett-kode:7e979b591601df796367c2e55b020eac&#34;&gt;Del 10: Komplett kode&lt;/h3&gt;

&lt;p&gt;Slik ser den ferdige koden ut.&lt;/p&gt;

&lt;pre&gt;
// Ball
float ballX;
float ballY;
float ballXFart = 2;
float ballYFart = 2;
float ballRadius = 9;
float ballDiameter = ballRadius * 2;

// Rekkertene
float rekkert1Hoyde = 66; // Rekkert 1 sin høyde ved start av spillet
float rekkert2Hoyde = 66; // Rekkert 2 sin høyde ved start av spillet
float rekkertBredde = 5; // Rekkertenes bredde
float rekkertFart = 4; // Hastighet på rekkertene

// Rekkert 1 sin plassering i X- og Y-aksen
float rekkert1X = 20;
float rekkert1Y = 100;

// Rekkert 2 sin plassering i X- og Y-aksen
float rekkert2X = 575;
float rekkert2Y = 100;

// Poeng
int spiller1 = 0;
int spiller2 = 0;


void setup() {
    size(600,300);
    
    smooth(2);
    // Starposisjon for ball
    ballX = width / 2;
    ballY = height / 2;
}

void draw() {
    // Posisjon for ball
    ballX = ballX + ballXFart;
    ballY = ballY + ballYFart;
    
    // Ny posisjon for ball hvis den kommer utenfor venstre side
    if (ballX &lt; ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }

    // Ny posisjon for ball hvis den kommer utenfor høyre side 
    if (ballX &gt; width - ballRadius) {
        ballX = width / 2;
        ballY = height / 2;
    }
    
    // Y-retning - sprett i toppen
    if (ballY &lt; ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Y-retning - sprett i bunnen
    if (ballY &gt; height - ballRadius) {
        ballYFart = -ballYFart;
    }
    
    // Hvis ball treffer rekkert på venstre side
    if (ballX-ballRadius &lt; rekkert1X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert1X) {
            if (ballY &lt; rekkert1Y + rekkert1Hoyde &amp;&amp; ballY &gt; rekkert1Y) {
                ballX = ballX + rekkertBredde; // Ny posisjon for ball i X-aksen
                ballXFart = -ballXFart; // Ny retning for ball i X-aksen
                rekkert1Hoyde = rekkert1Hoyde - 2; // Gjør rekkert litt mindre
                spiller1 = spiller1 + 1; // Legg på poeng for spiller 1        
            }
    }
    
    // Hvis ball treffer rekkert på høyre side
    if (ballX-ballRadius &lt; rekkert2X + rekkertBredde &amp;&amp; ballX + ballRadius &gt; rekkert2X) {
            if (ballY &lt; rekkert2Y + rekkert2Hoyde &amp;&amp; ballY &gt; rekkert2Y) {
                ballX = ballX - rekkertBredde; // Ny posisjon for ball i Y-aksen
                ballXFart = -ballXFart; // Ny retning for ball i Y-aksen
                rekkert2Hoyde = rekkert2Hoyde - 2; // Gjør rekkert litt mindre
                spiller2 = spiller2 + 1; // Legg på poeng for spiller 2
            }
    }
    
    if (keyPressed) {
        // Kontroll av rekkert 2 (høyre side)
        if (keyCode == UP) {
            rekkert2Y = rekkert2Y - rekkertFart;
        }
        
        if (keyCode == DOWN) {
            rekkert2Y = rekkert2Y + rekkertFart;
        }

        // Kontroll av rekkert 1 (venstre side)
        if (key == &#39;w&#39;) {
            rekkert1Y = rekkert1Y - rekkertFart;
        }
        
        if (key == &#39;s&#39;) {
            rekkert1Y = rekkert1Y + rekkertFart;
        }
    }
    

    background(0);
    ellipse(ballX, ballY, ballDiameter, ballDiameter); // Tegn ball
    rect(rekkert1X, rekkert1Y, rekkertBredde, rekkert1Hoyde); // Tegn rekkert 1
    rect(rekkert2X, rekkert2Y, rekkertBredde, rekkert2Hoyde); // Tegn rekkert 2
    text(spiller1+&#34; poeng&#34;,10,10); // Poenh for spiller 1
    text(spiller2+&#34; poeng&#34;,550,10); // Poeng for spiller 2
}
&lt;/pre&gt;

&lt;p&gt;Klarer du å lage en autoplay som spiller spillet for deg?
Klarer du å legge på egne farger på de enkelte delene?
Klarer du å få flere poeng en din motstander?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lykke til!&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Keyes CC3000 wifi shield på Arduino Uno</title>
      <link>http://sjsd.github.io/post/keyes-cc3000-wifi-shield/</link>
      <pubDate>Mon, 25 Jan 2016 19:22:25 +0100</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/keyes-cc3000-wifi-shield/</guid>
      <description>

&lt;p&gt;Jeg kjøpt mitt WIFI-shield via Banggoods (en billig Kina-butikk), type Keyes CC3000 WiFi Shield. Jeg forventet ikke mye av dette kontra &amp;ldquo;originale&amp;rdquo; men det skal være basert på CC3000-brikka. Så noe nytte må den vel gjøre. Jeg møtte på noen utfordringer og har forsøkt å oppsummere løsningene her.&lt;/p&gt;

&lt;h2 id=&#34;bibliotek:351672304d0a25cac6bfa3631600e5e2&#34;&gt;Bibliotek&lt;/h2&gt;

&lt;p&gt;Jeg forsøkte først &lt;a href=&#34;https://github.com/adafruit/Adafruit_CC3000_Library&#34;&gt;bibliotektet til Adafruit&lt;/a&gt;. Men fikk ikke koblet meg på det trådløse nettverket. Så forsøkte jeg &lt;a href=&#34;https://github.com/sparkfun/SFE_CC3000_Library&#34;&gt;bibliotektet til Sparkfun&lt;/a&gt;. Uten videre hell. Det skal vise seg at løsningen likevel ligger i biblioteket til Sparkfun.&lt;/p&gt;

&lt;h2 id=&#34;endre-pinner:351672304d0a25cac6bfa3631600e5e2&#34;&gt;Endre pinner&lt;/h2&gt;

&lt;p&gt;I definisjonen av pinner som brettet benytter så må man endre hvilken som benyttes. Slik:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define CC3000_INT      3   // Needs to be an interrupt pin (D2/D3)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define CC3000_EN       5   // Can be any digital pin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define CC3000_CS       10  // Preferred is pin 10 on Uno&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define SD_CS           4   // Chip select for SD card&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Dette er faktisk den hele løsningen. Endre oppsettet for pinner som Arduino skal &amp;ldquo;snakke&amp;rdquo; med brettet med.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetooth i en gammel FM-radio</title>
      <link>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</guid>
      <description>

&lt;p&gt;Jeg har en «gammel» radio som har vært en god følgesvenn av familien i noen år. Vi har egentlig aldri behandlet denne radioen noe spesielt godt. Den har alltid stått ute i vær og vind. Noe den bærer preg av. Men til tross for dårlig behandling så virker den som den skal.&lt;/p&gt;

&lt;p&gt;Dette innlegget er litt langt. Jeg har i detalj gått igjennom mine funn og forsøkt å dokumentere det med bilder som jeg har tatt underveis.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:1273d6887e1ec6d519742647e160a85b&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Ved å koble til en bluetooth-mottaker i en gammel radio så har jeg «byttet ut» den gamle FM-delene med noe mer moderne. Bakgrunnen er at jeg streamer 99% av all musikk og radio via mobiltelefonen. FM-nettet slukkes snart her i Norge og da ville radioen likevel være ubrukelig. Jeg har valgt å gjøre det på den vanskelige måten fremfor å koble en ferdig dongle direkte på inngangen. Større utfordring, mer morro.&lt;/p&gt;

&lt;p&gt;Det skulle vise seg å bli en større utfordring enn først antatt.&lt;/p&gt;

&lt;h2 id=&#34;denver-tr-43c:1273d6887e1ec6d519742647e160a85b&#34;&gt;Denver TR-43C&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135732.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;En Denver TR-43C i orange farge. Radioen er en typisk nobrand og selges under ulike merkenavn. Det jeg har klart å finne ut av via internett er at innmaten er lik uavhengig av merkenavnet den selges under.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135631.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Naturkreftene har forsøkt å ta tak i den. Jordslag og noe seigt belegg utenpå har dempet den ellers så friske orange fargen.&lt;/p&gt;

&lt;h2 id=&#34;fm-vs-dab-vs-streaming:1273d6887e1ec6d519742647e160a85b&#34;&gt;FM vs DAB vs streaming&lt;/h2&gt;

&lt;p&gt;Jeg skal ikke kaste meg i vei i diskusjonen om FM vs DAB. Men når FM-nettet slukkes om 2 år så vil vår gode og gamle FM-radio være mer eller mindre unyttig. Og siden vi streamer det meste av musikk via mobiltelefonen så kunne det vært kjekt å gjøre den gamle radioen om slik at den kan ta imot musikk via bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135640.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Denne antenna blir overflødig om et par år. Derfor velger jeg å bygge om radioen til å møte vårt behov og vår foretrukne måte å lytte til både musikk og radio på.&lt;/p&gt;

&lt;h2 id=&#34;valg-av-bluetooth:1273d6887e1ec6d519742647e160a85b&#34;&gt;Valg av bluetooth&lt;/h2&gt;

&lt;p&gt;Ja, jeg kunne selvsagt ha kjøpt en bluetooth-adapter til 50,- inkl. frakt på eBay og koblet den med en standard min jack-kablel på inngangen til radioen. Men hva er utfordringen i det?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135655.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Som bildet over viser så har radioen en egen lydinngang og en utgang for hodetelefoner. Via lydinngangen kunne jeg valgt å koble telefonen direkte eller brukt en billig bluetooth-dongle. Men som sagt, hva er utfordringen med det?&lt;/p&gt;

&lt;h2 id=&#34;bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Bluetooth LN-BT02&lt;/h2&gt;

&lt;p&gt;Så jeg handlet meg en bluetooth-sak med det kryptiske navnet LN-BT02. Slik ser den ut:&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/sku229677-61.jpg?w=700&amp;amp;h=700&#34; alt=&#34;LN-BT02&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Bildet over viser den medfølgende mikrofonen. I tillegg fulgte det med ulike kabler for strøm og lyd (inn og ut).&lt;/p&gt;

&lt;h2 id=&#34;demontering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Demontering&lt;/h2&gt;

&lt;p&gt;Radioen er enkel å skru fra hverandre. Tre skruer er tilgjengelig på baksiden. Den fjerde skruen en dekket av et deksel som dekker til strømtrafoen. Så dette dekselet må også skrues av.&lt;/p&gt;

&lt;p&gt;Det er ikke nødvendig å ta av bryter eller knotter på forsiden siden det er to kretskort og det som disse er koblet til er skrudd fast på dekselet foran.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_141126.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;strøm-til-bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Strøm til bluetooth (LN-BT02)&lt;/h2&gt;

&lt;p&gt;Selve radioen bruker enten vanlig strøm (230V) eller 6 batterier av type AA. Selve radioen bruker 9 – 12V (9V på batteridrift eller 12V ut ifra trafoen). Ved å bruke et multimeter så målte jeg 12V ferdig likerettet ut ifra trafoen (dvs. likeretteren sitter på kretskortet).&lt;/p&gt;

&lt;p&gt;LN-BT02 driftes fra 7V til 30V, så dette passet perfekt. Det er bare å lodde på strømledningen som følger med rett på kretskortet og LN-BT02 får strøm.&lt;/p&gt;

&lt;p&gt;NB! Det er kanskje ikke en god løsning å ha strøm rett på bluetooth-enheten hele tiden. Men enn så lenge så duger det slik at jeg kan komme meg videre til neste steg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154326.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Den røde og sorte som går rett opp i bildet over er strømmen til blåtannenheten.&lt;/p&gt;

&lt;h2 id=&#34;koble-til-lyd:1273d6887e1ec6d519742647e160a85b&#34;&gt;Koble til lyd&lt;/h2&gt;

&lt;p&gt;Blåtannenheten gir fra seg (ved fullt volum) standard linjesignal. Dvs. at den ikke kan koble direkte på en høyttaler, men signalet må via en forsterke. Dette finnes allerede i radioen.&lt;/p&gt;

&lt;p&gt;Jeg bruker multimeteret til å finne ut hvilket kontaktpunkter på kretskortet ved AUX-inngangen som er jord, høyre og venstre. Dermed lodder jeg på lydkabelen for blåtannenheten på disse punktene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154341.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;På undersiden av AUX-inngangen har jeg loddet på jord (sort) og høyre og venstre (hvit og rød) til kontaktpunktene til inngangen.&lt;/p&gt;

&lt;h3 id=&#34;første-problem-fm-og-blåtann-samtidig:1273d6887e1ec6d519742647e160a85b&#34;&gt;Første problem – FM og blåtann samtidig&lt;/h3&gt;

&lt;p&gt;Problemet er at radioen er laget på slik måte at hvis man ikke har en plugg inn i AUX-inngangen så aktiveres FM-radioen. Så nå vil radioen spille av FM-radio + lyd fra blåtann samtidig. Det er ikke helt heldig. Det er altså en bryter som aktiveres når man stikker en plugg inn i AUX-inngangen (som er en 3,5mm mini jack).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154402.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Jeg søker på internett etter denne type bryter / kontakt men finner kun noen dårlige skisser som ikke sier meg så mye. Så ved å bruke multimeteret mitt finner jeg til slutt to kontaktpunkter som endrer status avhengig av om det er en plugg inne i kontakten eller ei. Men jeg finner ingen enkel måte å deaktivere de på uten at det er en plugg satt inn.&lt;/p&gt;

&lt;h3 id=&#34;andre-problem-lydproblemer:1273d6887e1ec6d519742647e160a85b&#34;&gt;Andre problem – lydproblemer&lt;/h3&gt;

&lt;p&gt;Jeg lodder av kontakten med bryteren fra kretskortet. Når jeg løfter den av så faller en rekke deler ut av den. Fra bryteren altså. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg lodder så på igjen lydkabelen på de samme kontaktpunktene som tidligere. FM-radioen er nå deaktivert og jeg får lyd via blåtann. Men lyden er gått fra å være normal til å være svært svak. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg prøver å koble sammen kontaktpunktene for radio og får aktivert radioen igjen. Ikke noe endring av lydstyrken annet enn at FM-radioen nå spiller sammen med lyden fra blåtann. Så det er ikke løsningen, så jeg deaktiverer FM-radioen på nytt.&lt;/p&gt;

&lt;p&gt;På dette stadiet blir prosjektet liggende i mange dager. Siden jeg har en helt lik radio til så åpner jeg denne og kobler på lydkabelen. Full lydstyrke her. Så til tross for at jeg lodder på kabelen på samme punkter så er det en betydelig forskjell på før og etter at jeg tok av mini jack -kontakten. Hva som er årsaken vet jeg ikke. Man skulle tro det er en «mystisk» kobling inne i mini jack -kontakten som jeg overser. Et eller annet har jeg klart å ødelegge på veien.&lt;/p&gt;

&lt;p&gt;Utallige forsøk på å finne andre punkter å lodde lydkabelen inn på. Ingen av dem gir noe bedre resultat. Forsterkeren i radioen er og forblir død/svak.&lt;/p&gt;

&lt;h2 id=&#34;løsning-frankenstein:1273d6887e1ec6d519742647e160a85b&#34;&gt;Løsning – Frankenstein&lt;/h2&gt;

&lt;p&gt;Som nevn, jeg har en maken radio. En sort! Så med en rekke erfaringer klokere  så blir det den sorte broren til den oransje radioen som får gjennomgå. Bluetooth-enheten blir plassert inn her istedet.&lt;/p&gt;

&lt;p&gt;Her er noen bilder av den endelige løsningen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125724.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125730.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125738.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Ikke så pen løsning, jeg skulle kanskje ha kostet på meg egne knapper eller i det minste en Dremel fremfor et grovt bor.&lt;/p&gt;

&lt;p&gt;LN-BT02 har egne knapper for å hoppe en sang fremover, bakover og pause/play. Ved å holde nede venstre eller høyre knapp kan man også justere volumet.&lt;/p&gt;

&lt;h2 id=&#34;oppsummering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Oppsummering&lt;/h2&gt;

&lt;p&gt;Til tross for mye knoting og at prosjektet ble liggende urørt i en lang periode så kom jeg i havn. Jeg har lært litt og fått frisket opp gamle kunnskaper om elektronikk. Det irriterer meg fortsatt at jeg ikke fikk det til på første forsøk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125752.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino Nano, NewPing og HC-SR04</title>
      <link>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</guid>
      <description>

&lt;p&gt;Dette innlegget er egentlig veldig likt innlegget jeg skrev om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt; og innlegget om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/03/arduino-og-hc-sr04-ultrasonisk-sensor/&#34;&gt;Arduino og HC-SR04 (ultrasonisk sensor)&lt;/a&gt;. Likevel er det noen forskjeller som gjør det verdt å skrive om.&lt;/p&gt;

&lt;p&gt;Jeg har brukt en Arduino Nano V3.0 og HC-SR04 på et koblingsbrett. I motsetning til de to foregående eksemplene hvor jeg har skrevet om ultrasonisk sensor så har jeg benyttet meg av et bibliotek som heter NewPing (som du kan kan &lt;a href=&#34;https://bitbucket.org/teckel12/arduino-new-ping/wiki/Home&#34;&gt;laste ned fra BitBucket&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Det er flere fordeler ved å bruke NewPing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mer nøyaktig avlesning&lt;/li&gt;
&lt;li&gt;Henger &lt;strong&gt;ikke&lt;/strong&gt; i et sekund ved feil avlesning&lt;/li&gt;
&lt;li&gt;Man kan sette maks avstand for avstand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;++ flere du kan lese om på &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing&#34;&gt;Arduino Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Årsaken til at jeg har byttet fra standard Arduino-kode til NewPing sitt bibliotek var at jeg oppdaget at oppsettet trakk veldig my strøm og ved bruk av batteri så tømte batteriene seg raskt.&lt;/p&gt;

&lt;p&gt;Det gjenstår å teste Nano og NewPing med batteri.&lt;/p&gt;

&lt;h2 id=&#34;skisse:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;Skissen viser hvordan jeg valgte å koble opp min Nano og HC-SR04.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/nano-hcsr04_bb.png?w=700&amp;amp;h=585&#34; alt=&#34;Arduino Nano og HC-SR04 skisse&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Koden jeg har testet med er &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing?action=sourceblock&amp;amp;num=1&#34;&gt;standard eksempelet til NewPing&lt;/a&gt;. Eneste endringen jeg har gjort er å endre hvilken port som benyttes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Koble Arduino til internett via USB</title>
      <link>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</guid>
      <description>

&lt;p&gt;Det er mulig for en Arduino å skrive verdier til eller lese verdier fra internett via USB. Ikke så optimal løsning som å bruke eternetshield eller wifi, men dog mulig. Dette innlegget er et eksempel på hvordan jeg har lest av en verdi fra en fil som er tilgjengelig på internett og videresender denne verdien til min Arduino.&lt;/p&gt;

&lt;p&gt;Målet vårt her er å lese av en verdi (et tall) fra en tekstfil som ligger på internett og så få LED (på pinne 13) til å blinke like mange ganger som verdien. Et veldig enkelt eksempel.&lt;/p&gt;

&lt;h2 id=&#34;hva-trenger-man:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hva trenger man?&lt;/h2&gt;

&lt;p&gt;Når du allerede er komme til dette steget regner jeg med at du har en Arduino, USB-kabel og en datamaskin med Arduino IDE innstallert. Det du trenger i tillegg er et program Processing.&lt;/p&gt;

&lt;h3 id=&#34;processing:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Processing?&lt;/h3&gt;

&lt;p&gt;Processing kan brukes til så mangt. Det vi skal bruke det til er å lese av en fil fra internett og sende den informasjonen videre til vår Arduino som er koble til via USB. Processing IDE er så likt Arduino IDE at når du skal programere så vil du lett kjenne deg igjen.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og HC-SR04 (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette innlegget er neste identisk med mitt innlegg &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt;. Eneste forskjellen er bytte av sen ultrasoniske sensoren. Både Ping oh HC-SR04 er populære sensorer å koble til Arduino. I bunn og grunn helt like produkter men med en stor forskjell – antall pinner. Ping har 3 mens HC-SR04 har 4 pinner. Derfor blir koblingskjemaet og koden bittelitt forskjellig.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;En ultrasonisk sensor måler avstanden til et objekt. Basert på avstanden så vil tre ulike LED lyse opp. Grønn LED lyser ved avstand over 25cm. Orange LED lyser ved avstand mellom 10 og 25 cm. Rød LED lyser ved avstand under 10 cm.&lt;/p&gt;

&lt;h2 id=&#34;skisse:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png&#34;&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png?w=700&amp;amp;h=361&#34; alt=&#34;hcsr04-2_bb&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hc-sr04:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;HC-SR04&lt;/h2&gt;

&lt;p&gt;HC-SR04 har 4 pinner:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VCC – 5V (positiv)&lt;/li&gt;
&lt;li&gt;Trig – signal inn fra Arduino (trigger)&lt;/li&gt;
&lt;li&gt;Echo – signal ut fra&lt;/li&gt;
&lt;li&gt;Gnd – jord (negativ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fordelen med fire pinner er at programmet til Arduinoen slipper å skifte mellom inn- og utgang på samme pinne.&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En HC-SR04 er like enkelt å sette opp og bruke som en Ping. Er man nybegynner så er det kanskje lettere å forstå programeringen med 4 pinner kontra 3 pinner. Man sender inn et signal og får straks svar tilbake på den andre pinnen.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og Ping (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-ping-ultrasonisk-sensor/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/arduino-og-ping-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette er helt grunnleggende hvordan man kobler opp en Arduino og en Ping. Koden jeg har brukt er basert på standard eksempel fra Arduino. Eneste jeg har gjort er å legge til tre LED som lyser basert på avstand.&lt;/p&gt;

&lt;p&gt;Jeg har lånt meg en Ping og satt opp en enkelt test. Dette er en liten del av et litt større prosjekt jeg planlegger. Flere innlegg vil nok komme etter hvert.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Når et objekt er lengre unna enn 26 cm så vil grønn LED lyse. Når et objekt er mellom 26 og 10 cm unna så vil orange LED lyse. Hvis et objekt er 10cm eller nærmere så vil rød LED lyse. Avstanden måles med Ping (en ultrasonisk sensor).&lt;/p&gt;

&lt;h2 id=&#34;skisse:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/ping_bb.png?w=700&amp;amp;h=878&#34; alt=&#34;Arduino Ping&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Dessverre så får jeg ikke limt inn koden og stilsatt den på en slik måte at den er lettlest. Dette pga restriksjoner knyttet til WordPress (siden jeg ikke hoster WordPress selv). Men jeg har lagt ut koden på Github for den som ønsker å laste den ned.&lt;/p&gt;

&lt;p&gt;Se og last ned koden her &lt;a href=&#34;https://gist.github.com/sjsd/cf9ea98577b9b277143c&#34;&gt;https://gist.github.com/sjsd/cf9ea98577b9b277143c&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En Ping (eller en ultrasonisk sensor) er en veldig enkelt sak å sette opp. Den jeg har brukt her har tre pinne (en for 5V, jord og signal). Man sender inn et signal og får straks svar tilbake på samme pinne (utgang/inngang på Arduinoen). I koden jeg har brukes inn- utgang 7. Rett etter man har sendt et signal endrer man utgangen til en inngang som er klar for å ta imot signalet.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;

&lt;p&gt;Likevel er jeg sikker på at en ultrasonisk sensor er det mest anvendelige i prosjektet mitt.&lt;/p&gt;

&lt;p&gt;Ping-en jeg har brukt er en lånt enhet. Selv så venter jeg på en jeg har bestilt billig fra eBay. Den har fire pinner. Forskjellen er at man slipper å endre pinne 7 mellom å sende et signal og ta imot et signal. Man bruker da en egen inngang og en egen utgang for å sende eller motta signal. Ellers er prinsippet det samme.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Legg til hendeslessporing for Google Analytics til Ninja Blocks</title>
      <link>http://sjsd.github.io/post/legg-til-hendeslessporing-for-google-analytics-til-ninja-block/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/legg-til-hendeslessporing-for-google-analytics-til-ninja-block/</guid>
      <description>

&lt;p&gt;Google Analytics (GA) har mulighet for å legge til sporing av enten sidevisning eller hendelse via en egen måleprotokoll (&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/protocol/v1/&#34; title=&#34;Google Analytics Measurement Protocol&#34;&gt;Measurement Protocol&lt;/a&gt;). Kort fortalt så spores sider og hendelser via javascript. Men ved å sende en forespørsel til en egen URL til GA så kan man sende inn sporinger uten javascript. Her skal jeg forsøke å beskrive hvordan man setter opp en slik URL og hvordan jeg bruker den sammen med Ninja Blocks.&lt;/p&gt;

&lt;div class=&#34;block-message info&#34;&gt;

**TL;DR**

Ved å legge til en webhook for Ninja Blocks kan man legge til sporing i Google Analytics. Legg til &lt;span class=&#34;skimlinks-unlinked&#34;&gt;http://www.google-analytics.com/collect&lt;/span&gt; som URI og eksempelvis v=1&amp;tid=UA-XXX-Y&amp;cid=555&amp;t=event&amp;ec=Bevegelse&amp;ea=Åpnet&amp;el=Ytterdør som POST data. Opprett så en regel som utfører sporingen.

&lt;/div&gt;

&lt;h2 id=&#34;google-analytics:e9020054e4ab7898b92cda096749c59b&#34;&gt;Google Analytics&lt;/h2&gt;

&lt;h3 id=&#34;grunnleggende:e9020054e4ab7898b92cda096749c59b&#34;&gt;Grunnleggende&lt;/h3&gt;

&lt;p&gt;Først må man opprette en GA-konto (noe jeg regner med at du allerede har) og finne sporings-IDen. Sporings-IDen ser typisk slik ut UA-12345678-9. Så må man bygge opp URL-en man skal sende et kall til. URL-en må se slik ut (&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/protocol/v1/devguide#required&#34; title=&#34;Sending Required Values&#34;&gt;dette er minstekravet&lt;/a&gt;): &lt;a href=&#34;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXXX-Y&amp;amp;cid=555&amp;amp;t=pageview&#34;&gt;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXXX-Y&amp;amp;cid=555&amp;amp;t=pageview&lt;/a&gt;&lt;br /&gt;
Hvis vi bryter den ned litt så ser vi hvilken elementer URL-en består av&lt;/p&gt;

&lt;table class=&#34;lensTable&#34;&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Element&lt;/th&gt;

&lt;th&gt;Forklaring&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;[http://www.google-analytics.com/collect](http://www.google-analytics.com/collect)&lt;/td&gt;

&lt;td&gt;URL&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;v=1&lt;/td&gt;

&lt;td&gt;Versjon (i skrivende stund 1)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;tid=UA-XXX-Y&lt;/td&gt;

&lt;td&gt;Bytt ut UA-XXX-Y med din sporings-ID&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cid=555&lt;/td&gt;

&lt;td&gt;Tillater anonym sporing&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;t=pageview&lt;/td&gt;

&lt;td&gt;Type sporing (pageview eller event)&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;h3 id=&#34;hendelsessporing:e9020054e4ab7898b92cda096749c59b&#34;&gt;Hendelsessporing&lt;/h3&gt;

&lt;p&gt;For å spore en spesiell hendelse så trenger vi å legge til noen ekstra parametere. Målet mitt er å registrere en spesifikk hendelse som jeg sendere skal bruke med min Ninja Blocks. Derfor legger jeg til følgende elementer i URL-en:&lt;/p&gt;

&lt;table class=&#34;lensTable&#34;&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Element&lt;/th&gt;

&lt;th&gt;Forklaring&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;[http://www.google-analytics.com/collect](http://www.google-analytics.com/collect)&lt;/td&gt;

&lt;td&gt;URL&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;v=1&lt;/td&gt;

&lt;td&gt;Versjon (i skrivende stund 1)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;tid=UA-XXX-Y&lt;/td&gt;

&lt;td&gt;Bytt ut UA-XXX-Y med din sporings-ID&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cid=555&lt;/td&gt;

&lt;td&gt;Tillater anonym sporing&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;t=event&lt;/td&gt;

&lt;td&gt;Type sporing (pageview eller event)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ec=Bevegelse&lt;/td&gt;

&lt;td&gt;Hendelseskategori&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ea=Åpnet&lt;/td&gt;

&lt;td&gt;Handling&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;el=Ytterdør&lt;/td&gt;

&lt;td&gt;Hendelsesetikett&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;p&gt;Som du ser så har jeg lagt til noen nye elementer. Disse er kategori, handling og etikett. Så min komplette URL er nå ferdig og jeg kan teste den direkte i nettleseren for å se at sporingen blir slik jeg ønsker i GA.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXX-Y&amp;amp;cid=555&amp;amp;t=event&amp;amp;ec=Bevegelse&amp;amp;ea=Åpnet&amp;amp;el=Ytterdør&#34;&gt;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXX-Y&amp;amp;cid=555&amp;amp;t=event&amp;amp;ec=Bevegelse&amp;amp;ea=Åpnet&amp;amp;el=Ytterdør&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ninja-blocks-webhook:e9020054e4ab7898b92cda096749c59b&#34;&gt;Ninja Blocks Webhook&lt;/h2&gt;

&lt;p&gt;For Ninja Blocks kan man legge til noe de kaller for en webhook. Jeg vet ikke om noen god norsk oversettelse av ordet webhook, så jeg bruker det engelske ordet. Da kan man benytte denne som en del av et regelsett. Jeg regner med at du er kjent med Ninja Blocks og hvordan opprette en regel.&lt;/p&gt;

&lt;p&gt;Hvis du ikke har aktivert webhook så gå til &lt;a href=&#34;http://help.ninjablocks.com/customer/portal/articles/683991-webhooks&#34; title=&#34;Ninja Blocks Webhooks&#34;&gt;Settings –&amp;gt; Sevices og aktiver Webhook&lt;/a&gt;. Nå vil det dukke opp et nytt element på forsiden hvor man kan administrere webhook-er.&lt;/p&gt;

&lt;h3 id=&#34;opprett-webhook:e9020054e4ab7898b92cda096749c59b&#34;&gt;Opprett webhook&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Trykk på «Add a webhook»&lt;/li&gt;
&lt;li&gt;Velg så «Outbound Webhook (Actuator)» i nedtrekksmenyen&lt;/li&gt;
&lt;li&gt;Gi den et navn, f.eks «GA – Ytterdør»&lt;/li&gt;
&lt;li&gt;Legg til «Webhook URI»:&lt;br /&gt;
&lt;a href=&#34;http://www.google-analytics.com/collect&#34;&gt;http://www.google-analytics.com/collect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I feltet «POST data» legges resten av URL-en til:&lt;br /&gt;
v=1&amp;amp;tid=UA-XXX-Y&amp;amp;cid=555&amp;amp;t=event&amp;amp;ec=Bevegelse&amp;amp;ea=Åpnet&amp;amp;el=Ytterdør&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Merk at spørsmålstegnet før v=1 ikke er med på punkt 5.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/12/webhook-ga.png?w=700&#34; alt=&#34;Ninja Blocks webhook GA&#34; /&gt;
&lt;br /&gt;
&lt;em&gt;Skjermbilde av opprettelse av en webook.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Etter at webhooken er opprettet så må man lage en regel som kjører webhooken ved en eller annen hendelse. I mitt tilfelle har jeg en trådløs dørsensor. Hver gang døren åpnes så registreres det som en hendelse (event) i GA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programmere ATTiny13a via Arduino</title>
      <link>http://sjsd.github.io/post/programmere-attiny13a-via-arduino/</link>
      <pubDate>Sat, 27 Sep 2014 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/programmere-attiny13a-via-arduino/</guid>
      <description>

&lt;p&gt;Slik kan man programmere en Atmel ATTiny13a via en Arduino. Dette innlegget er mest for min egen del og for at jeg skal huske fremgangsmåten. Men så lenge jeg har et behov for å notere ned mine funn etter mye prøving og feiling så tenker jeg at det er like greit å dele min kunnskap med andre. Målet er å programmere en ATTiny13a ved å bruke en Arduino og Arduino IDE.&lt;/p&gt;

&lt;h2 id=&#34;last-ned:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Last ned&lt;/h2&gt;

&lt;p&gt;Last ned nødvendig programvare.&lt;/p&gt;

&lt;h3 id=&#34;arduino-ide:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Arduino IDE&lt;/h3&gt;

&lt;p&gt;Last ned versjon 1.0.0 av Arduino IDE &lt;a href=&#34;http://arduino.cc/en/Main/OldSoftwareReleases&#34; title=&#34;Arduino IDE old releases&#34;&gt;http://arduino.cc/en/Main/OldSoftwareReleases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jeg vet ikke årsaken, men jeg prøvde og feilet i lang tid ved å bruke versjon 1.0.5. Hver gang ble kompileringen av de helt enkleste eksempler (Blink) for stor til å laste inn på ATTiny13. Men etter et tips i en annen blogg prøvde jeg versjon 1.0.0 og vips så fikk jeg kompileringen til å bli liten nok til å passe inn på ATTiny13.&lt;/p&gt;

&lt;h3 id=&#34;attiny:260bd422fe249ca9139f6224b9b4a288&#34;&gt;ATTiny&lt;/h3&gt;

&lt;p&gt;Arduino IDE har ingen kunnskap om ATTiny13. Så last ned fra GitHub &lt;a href=&#34;https://github.com/tekstop/attiny/tree/Arduino1&#34;&gt;https://github.com/tekstop/attiny/tree/Arduino1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Plasser innholdet i den ZIP-ede filen i mappen hardware i mappen for Arduino IDE. Eksempelvis så ser mappestrukturen min slik ut: c:arduino100/hardware/attiny/ I denne mappen ligger altså filene og mappene fra ZIP-filen.&lt;/p&gt;

&lt;h3 id=&#34;endring:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Endring&lt;/h3&gt;

&lt;p&gt;Før du åpner Arduino IDE så må det legges til en liten endring i en fil som heter wiring.c. Denne fila finner du i mappen &lt;em&gt;hardwarearduinocoresarduino&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;På linje (ca 44) legger man til _|| (&lt;strong&gt;AVR_ATtiny13&lt;/strong&gt;) _sammen med de andre definisjonene.&lt;/p&gt;

&lt;h2 id=&#34;oppkobling:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Oppkobling&lt;/h2&gt;

&lt;p&gt;For at Arduino-en skal kunne programmere brikken så må de kobles sammen. Eksempel: pinne 13 på Arduino til pinne 7 på brikka osv. Se skjemaet og skissen under.&lt;/p&gt;

&lt;table&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;**Arduino**&lt;/td&gt;

&lt;td&gt;**ATTiny13a**&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;13&lt;/td&gt;

&lt;td&gt;7&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;12&lt;/td&gt;

&lt;td&gt;6&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;11&lt;/td&gt;

&lt;td&gt;5&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;10&lt;/td&gt;

&lt;td&gt;1&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;5V&lt;/td&gt;

&lt;td&gt;8&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;GND&lt;/td&gt;

&lt;td&gt;4&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/untitled-sketch-2_bb.png?w=560&amp;amp;h=374&#34; alt=&#34;Arduino to ATTiny13a&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;programmeringen:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Programmeringen&lt;/h2&gt;

&lt;p&gt;Nå er Arduinoen og brikka koblet opp, bibliotektet for ATTiny13 er lagt til for Arduino IDE og definisjonen for brikka er lagt til i &lt;span class=&#34;skimlinks-unlinked&#34;&gt;wiring.c-fila&lt;/span&gt;. Det er på tide å åpne Arduino IDE og gjøre de innledende innstillinger.&lt;/p&gt;

&lt;h3 id=&#34;velg-din-arduino-versjon:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Velg din Arduino versjon&lt;/h3&gt;

&lt;p&gt;Under &lt;em&gt;Tools -&amp;gt; Boards&lt;/em&gt; så velg din Arduino. I mitt tilfelle er det Arduino Uno.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/27-09-2014-15-15-16.png?w=560&amp;amp;h=857&#34; alt=&#34;Arduino IDE - boards&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;velg-arduino-som-programmer:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Velg Arduino som programmer&lt;/h3&gt;

&lt;p&gt;Under &lt;em&gt;Tools -&amp;gt; Programmer&lt;/em&gt; så velg &lt;em&gt;Arduino as ISP&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/27-09-2014-15-18-04.png?w=700&#34; alt=&#34;Arduino as ISP&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;åpne-arduinoisp:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Åpne ArduinoISP&lt;/h3&gt;

&lt;p&gt;Gå &lt;em&gt;File -&amp;gt; Examples&lt;/em&gt; og åpne ArduinoISP&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/27-09-2014-15-18-041.png?w=700&#34; alt=&#34;ArduinoISP&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Last opp ArduinoISP til Arduinoen, Ctrl + U. Nå er Arduinoen klar til å kunne programere ATTiny13a-brikken.&lt;/p&gt;

&lt;h2 id=&#34;test-med-blink:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Test med «Blink»&lt;/h2&gt;

&lt;p&gt;For å teste at alt er i orden så kan du koble til en motstand (ca. 200 Ohm) på pinne 3 på brikka, så en LED så til GND.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/untitled-sketch-2_bb-led.png?w=560&amp;amp;h=329&#34; alt=&#34;Arduino - Attiny13a - LED&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Åpen Blink-eksempelet. Bytt ut utgang 13 med utgang 4. Last så opp programmet ved å bruke &lt;em&gt;File -&amp;gt; Upload Using Programmer&lt;/em&gt; (eller Ctrl + Shift + U).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Serial input (video)</title>
      <link>http://sjsd.github.io/post/serial-input-video/</link>
      <pubDate>Sat, 13 Apr 2013 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/serial-input-video/</guid>
      <description>&lt;iframe width=&#34;700&#34; height=&#34;424&#34; src=&#34;https://www.youtube.com/embed/7Se3AXBjWMM&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Serial input</title>
      <link>http://sjsd.github.io/post/serial-input/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0000</pubDate>
      <author>helge.johnsen@outlook.com (Helge Johnsen)</author>
      <guid>http://sjsd.github.io/post/serial-input/</guid>
      <description>&lt;p&gt;Since I only have some LEDs to play with I had to be “creative”. So I have tried different ways to program my LEDs to light.&lt;/p&gt;

&lt;p&gt;This time I have been using the serial console in the Arduino enviroment software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is how it’s works:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By entering the numbers from 0 to 3 I make one of the four LEDs connected to the Arduino to light for some milliseconds.&lt;/p&gt;

&lt;p&gt;Here is the code: &lt;a href=&#34;https://gist.github.com/sjsd/5375179&#34;&gt;https://gist.github.com/sjsd/5375179&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/5375179&#34;&gt;https://gist.github.com/5375179&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s not so easy to see on the sketch below, but each LED is connected to a output, then through a resistor back to ground. Each LED is connected to their own output. I have used output 10 to 13.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i1.wp.com/38.media.tumblr.com/695db328a4021adc19079be7ecf714e9/tumblr_inline_ml5vg7387s1qz4rgp.png&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>