<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SJSD - blogg og notater om mine DIY</title>
    <link>http://sjsd.github.io/post/</link>
    <description>Recent content in Posts on SJSD - blogg og notater om mine DIY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>no-nb</language>
    <lastBuildDate>Mon, 25 Jan 2016 19:22:25 +0100</lastBuildDate>
    <atom:link href="http://sjsd.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Keyes CC3000 wifi shield på Arduino Uno</title>
      <link>http://sjsd.github.io/post/keyes-cc3000-wifi-shield/</link>
      <pubDate>Mon, 25 Jan 2016 19:22:25 +0100</pubDate>
      
      <guid>http://sjsd.github.io/post/keyes-cc3000-wifi-shield/</guid>
      <description>

&lt;p&gt;Jeg kjøpt mitt WIFI-shield via Banggoods (en billig Kina-butikk), type Keyes CC3000 WiFi Shield. Jeg forventet ikke mye av dette kontra &amp;ldquo;originale&amp;rdquo; men det skal være basert på CC3000-brikka. Så noe nytte må den vel gjøre. Jeg møtte på noen utfordringer og har forsøkt å oppsummere løsningene her.&lt;/p&gt;

&lt;h2 id=&#34;bibliotek:351672304d0a25cac6bfa3631600e5e2&#34;&gt;Bibliotek&lt;/h2&gt;

&lt;p&gt;Jeg forsøkte først &lt;a href=&#34;https://github.com/adafruit/Adafruit_CC3000_Library&#34;&gt;bibliotektet til Adafruit&lt;/a&gt;. Men fikk ikke koblet meg på det trådløse nettverket. Så forsøkte jeg &lt;a href=&#34;https://github.com/sparkfun/SFE_CC3000_Library&#34;&gt;bibliotektet til Sparkfun&lt;/a&gt;. Uten videre hell. Det skal vise seg at løsningen likevel ligger i biblioteket til Sparkfun.&lt;/p&gt;

&lt;h2 id=&#34;endre-pinner:351672304d0a25cac6bfa3631600e5e2&#34;&gt;Endre pinner&lt;/h2&gt;

&lt;p&gt;I definisjonen av pinner som brettet benytter så må man endre hvilken som benyttes. Slik:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define CC3000_INT      3   // Needs to be an interrupt pin (D2/D3)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define CC3000_EN       5   // Can be any digital pin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define CC3000_CS       10  // Preferred is pin 10 on Uno&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#define SD_CS           4   // Chip select for SD card&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Dette er faktisk den hele løsningen. Endre oppsettet for pinner som Arduino skal &amp;ldquo;snakke&amp;rdquo; med brettet med.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetooth i en gammel FM-radio</title>
      <link>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/bluetooth-i-en-gammel-fm-radio/</guid>
      <description>

&lt;p&gt;Jeg har en «gammel» radio som har vært en god følgesvenn av familien i noen år. Vi har egentlig aldri behandlet denne radioen noe spesielt godt. Den har alltid stått ute i vær og vind. Noe den bærer preg av. Men til tross for dårlig behandling så virker den som den skal.&lt;/p&gt;

&lt;p&gt;Dette innlegget er litt langt. Jeg har i detalj gått igjennom mine funn og forsøkt å dokumentere det med bilder som jeg har tatt underveis.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:1273d6887e1ec6d519742647e160a85b&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Ved å koble til en bluetooth-mottaker i en gammel radio så har jeg «byttet ut» den gamle FM-delene med noe mer moderne. Bakgrunnen er at jeg streamer 99% av all musikk og radio via mobiltelefonen. FM-nettet slukkes snart her i Norge og da ville radioen likevel være ubrukelig. Jeg har valgt å gjøre det på den vanskelige måten fremfor å koble en ferdig dongle direkte på inngangen. Større utfordring, mer morro.&lt;/p&gt;

&lt;p&gt;Det skulle vise seg å bli en større utfordring enn først antatt.&lt;/p&gt;

&lt;h2 id=&#34;denver-tr-43c:1273d6887e1ec6d519742647e160a85b&#34;&gt;Denver TR-43C&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135732.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;En Denver TR-43C i orange farge. Radioen er en typisk nobrand og selges under ulike merkenavn. Det jeg har klart å finne ut av via internett er at innmaten er lik uavhengig av merkenavnet den selges under.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135631.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Naturkreftene har forsøkt å ta tak i den. Jordslag og noe seigt belegg utenpå har dempet den ellers så friske orange fargen.&lt;/p&gt;

&lt;h2 id=&#34;fm-vs-dab-vs-streaming:1273d6887e1ec6d519742647e160a85b&#34;&gt;FM vs DAB vs streaming&lt;/h2&gt;

&lt;p&gt;Jeg skal ikke kaste meg i vei i diskusjonen om FM vs DAB. Men når FM-nettet slukkes om 2 år så vil vår gode og gamle FM-radio være mer eller mindre unyttig. Og siden vi streamer det meste av musikk via mobiltelefonen så kunne det vært kjekt å gjøre den gamle radioen om slik at den kan ta imot musikk via bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135640.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Denne antenna blir overflødig om et par år. Derfor velger jeg å bygge om radioen til å møte vårt behov og vår foretrukne måte å lytte til både musikk og radio på.&lt;/p&gt;

&lt;h2 id=&#34;valg-av-bluetooth:1273d6887e1ec6d519742647e160a85b&#34;&gt;Valg av bluetooth&lt;/h2&gt;

&lt;p&gt;Ja, jeg kunne selvsagt ha kjøpt en bluetooth-adapter til 50,- inkl. frakt på eBay og koblet den med en standard min jack-kablel på inngangen til radioen. Men hva er utfordringen i det?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_135655.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Som bildet over viser så har radioen en egen lydinngang og en utgang for hodetelefoner. Via lydinngangen kunne jeg valgt å koble telefonen direkte eller brukt en billig bluetooth-dongle. Men som sagt, hva er utfordringen med det?&lt;/p&gt;

&lt;h2 id=&#34;bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Bluetooth LN-BT02&lt;/h2&gt;

&lt;p&gt;Så jeg handlet meg en bluetooth-sak med det kryptiske navnet LN-BT02. Slik ser den ut:&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/sku229677-61.jpg?w=700&amp;amp;h=700&#34; alt=&#34;LN-BT02&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Bildet over viser den medfølgende mikrofonen. I tillegg fulgte det med ulike kabler for strøm og lyd (inn og ut).&lt;/p&gt;

&lt;h2 id=&#34;demontering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Demontering&lt;/h2&gt;

&lt;p&gt;Radioen er enkel å skru fra hverandre. Tre skruer er tilgjengelig på baksiden. Den fjerde skruen en dekket av et deksel som dekker til strømtrafoen. Så dette dekselet må også skrues av.&lt;/p&gt;

&lt;p&gt;Det er ikke nødvendig å ta av bryter eller knotter på forsiden siden det er to kretskort og det som disse er koblet til er skrudd fast på dekselet foran.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_141126.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;strøm-til-bluetooth-ln-bt02:1273d6887e1ec6d519742647e160a85b&#34;&gt;Strøm til bluetooth (LN-BT02)&lt;/h2&gt;

&lt;p&gt;Selve radioen bruker enten vanlig strøm (230V) eller 6 batterier av type AA. Selve radioen bruker 9 – 12V (9V på batteridrift eller 12V ut ifra trafoen). Ved å bruke et multimeter så målte jeg 12V ferdig likerettet ut ifra trafoen (dvs. likeretteren sitter på kretskortet).&lt;/p&gt;

&lt;p&gt;LN-BT02 driftes fra 7V til 30V, så dette passet perfekt. Det er bare å lodde på strømledningen som følger med rett på kretskortet og LN-BT02 får strøm.&lt;/p&gt;

&lt;p&gt;NB! Det er kanskje ikke en god løsning å ha strøm rett på bluetooth-enheten hele tiden. Men enn så lenge så duger det slik at jeg kan komme meg videre til neste steg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154326.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Den røde og sorte som går rett opp i bildet over er strømmen til blåtannenheten.&lt;/p&gt;

&lt;h2 id=&#34;koble-til-lyd:1273d6887e1ec6d519742647e160a85b&#34;&gt;Koble til lyd&lt;/h2&gt;

&lt;p&gt;Blåtannenheten gir fra seg (ved fullt volum) standard linjesignal. Dvs. at den ikke kan koble direkte på en høyttaler, men signalet må via en forsterke. Dette finnes allerede i radioen.&lt;/p&gt;

&lt;p&gt;Jeg bruker multimeteret til å finne ut hvilket kontaktpunkter på kretskortet ved AUX-inngangen som er jord, høyre og venstre. Dermed lodder jeg på lydkabelen for blåtannenheten på disse punktene.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154341.jpg?w=700&amp;amp;h=518&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;På undersiden av AUX-inngangen har jeg loddet på jord (sort) og høyre og venstre (hvit og rød) til kontaktpunktene til inngangen.&lt;/p&gt;

&lt;h3 id=&#34;første-problem-fm-og-blåtann-samtidig:1273d6887e1ec6d519742647e160a85b&#34;&gt;Første problem – FM og blåtann samtidig&lt;/h3&gt;

&lt;p&gt;Problemet er at radioen er laget på slik måte at hvis man ikke har en plugg inn i AUX-inngangen så aktiveres FM-radioen. Så nå vil radioen spille av FM-radio + lyd fra blåtann samtidig. Det er ikke helt heldig. Det er altså en bryter som aktiveres når man stikker en plugg inn i AUX-inngangen (som er en 3,5mm mini jack).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151003_154402.jpg?w=700&amp;amp;h=946&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Jeg søker på internett etter denne type bryter / kontakt men finner kun noen dårlige skisser som ikke sier meg så mye. Så ved å bruke multimeteret mitt finner jeg til slutt to kontaktpunkter som endrer status avhengig av om det er en plugg inne i kontakten eller ei. Men jeg finner ingen enkel måte å deaktivere de på uten at det er en plugg satt inn.&lt;/p&gt;

&lt;h3 id=&#34;andre-problem-lydproblemer:1273d6887e1ec6d519742647e160a85b&#34;&gt;Andre problem – lydproblemer&lt;/h3&gt;

&lt;p&gt;Jeg lodder av kontakten med bryteren fra kretskortet. Når jeg løfter den av så faller en rekke deler ut av den. Fra bryteren altså. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg lodder så på igjen lydkabelen på de samme kontaktpunktene som tidligere. FM-radioen er nå deaktivert og jeg får lyd via blåtann. Men lyden er gått fra å være normal til å være svært svak. Dohh…&lt;/p&gt;

&lt;p&gt;Jeg prøver å koble sammen kontaktpunktene for radio og får aktivert radioen igjen. Ikke noe endring av lydstyrken annet enn at FM-radioen nå spiller sammen med lyden fra blåtann. Så det er ikke løsningen, så jeg deaktiverer FM-radioen på nytt.&lt;/p&gt;

&lt;p&gt;På dette stadiet blir prosjektet liggende i mange dager. Siden jeg har en helt lik radio til så åpner jeg denne og kobler på lydkabelen. Full lydstyrke her. Så til tross for at jeg lodder på kabelen på samme punkter så er det en betydelig forskjell på før og etter at jeg tok av mini jack -kontakten. Hva som er årsaken vet jeg ikke. Man skulle tro det er en «mystisk» kobling inne i mini jack -kontakten som jeg overser. Et eller annet har jeg klart å ødelegge på veien.&lt;/p&gt;

&lt;p&gt;Utallige forsøk på å finne andre punkter å lodde lydkabelen inn på. Ingen av dem gir noe bedre resultat. Forsterkeren i radioen er og forblir død/svak.&lt;/p&gt;

&lt;h2 id=&#34;løsning-frankenstein:1273d6887e1ec6d519742647e160a85b&#34;&gt;Løsning – Frankenstein&lt;/h2&gt;

&lt;p&gt;Som nevn, jeg har en maken radio. En sort! Så med en rekke erfaringer klokere  så blir det den sorte broren til den oransje radioen som får gjennomgå. Bluetooth-enheten blir plassert inn her istedet.&lt;/p&gt;

&lt;p&gt;Her er noen bilder av den endelige løsningen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125724.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125730.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125738.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Ikke så pen løsning, jeg skulle kanskje ha kostet på meg egne knapper eller i det minste en Dremel fremfor et grovt bor.&lt;/p&gt;

&lt;p&gt;LN-BT02 har egne knapper for å hoppe en sang fremover, bakover og pause/play. Ved å holde nede venstre eller høyre knapp kan man også justere volumet.&lt;/p&gt;

&lt;h2 id=&#34;oppsummering:1273d6887e1ec6d519742647e160a85b&#34;&gt;Oppsummering&lt;/h2&gt;

&lt;p&gt;Til tross for mye knoting og at prosjektet ble liggende urørt i en lang periode så kom jeg i havn. Jeg har lært litt og fått frisket opp gamle kunnskaper om elektronikk. Det irriterer meg fortsatt at jeg ikke fikk det til på første forsøk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/10/img_20151103_125752.jpg?w=700&amp;amp;h=525&#34; alt=&#34;Denver TR-43C&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino Nano, NewPing og HC-SR04</title>
      <link>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-nano-newping-og-hc-sr04/</guid>
      <description>

&lt;p&gt;Dette innlegget er egentlig veldig likt innlegget jeg skrev om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt; og innlegget om &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/03/arduino-og-hc-sr04-ultrasonisk-sensor/&#34;&gt;Arduino og HC-SR04 (ultrasonisk sensor)&lt;/a&gt;. Likevel er det noen forskjeller som gjør det verdt å skrive om.&lt;/p&gt;

&lt;p&gt;Jeg har brukt en Arduino Nano V3.0 og HC-SR04 på et koblingsbrett. I motsetning til de to foregående eksemplene hvor jeg har skrevet om ultrasonisk sensor så har jeg benyttet meg av et bibliotek som heter NewPing (som du kan kan &lt;a href=&#34;https://bitbucket.org/teckel12/arduino-new-ping/wiki/Home&#34;&gt;laste ned fra BitBucket&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Det er flere fordeler ved å bruke NewPing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mer nøyaktig avlesning&lt;/li&gt;
&lt;li&gt;Henger &lt;strong&gt;ikke&lt;/strong&gt; i et sekund ved feil avlesning&lt;/li&gt;
&lt;li&gt;Man kan sette maks avstand for avstand&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;++ flere du kan lese om på &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing&#34;&gt;Arduino Playground&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Årsaken til at jeg har byttet fra standard Arduino-kode til NewPing sitt bibliotek var at jeg oppdaget at oppsettet trakk veldig my strøm og ved bruk av batteri så tømte batteriene seg raskt.&lt;/p&gt;

&lt;p&gt;Det gjenstår å teste Nano og NewPing med batteri.&lt;/p&gt;

&lt;h2 id=&#34;skisse:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;Skissen viser hvordan jeg valgte å koble opp min Nano og HC-SR04.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/nano-hcsr04_bb.png?w=700&amp;amp;h=585&#34; alt=&#34;Arduino Nano og HC-SR04 skisse&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:48bb3d3d0bb3ed481672ec9b4b75f2e1&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Koden jeg har testet med er &lt;a href=&#34;http://playground.arduino.cc/Code/NewPing?action=sourceblock&amp;amp;num=1&#34;&gt;standard eksempelet til NewPing&lt;/a&gt;. Eneste endringen jeg har gjort er å endre hvilken port som benyttes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Koble Arduino til internett via USB</title>
      <link>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/koble-arduino-til-internett-via-usb/</guid>
      <description>

&lt;p&gt;Det er mulig for en Arduino å skrive verdier til eller lese verdier fra internett via USB. Ikke så optimal løsning som å bruke eternetshield eller wifi, men dog mulig. Dette innlegget er et eksempel på hvordan jeg har lest av en verdi fra en fil som er tilgjengelig på internett og videresender denne verdien til min Arduino.&lt;/p&gt;

&lt;p&gt;Målet vårt her er å lese av en verdi (et tall) fra en tekstfil som ligger på internett og så få LED (på pinne 13) til å blinke like mange ganger som verdien. Et veldig enkelt eksempel.&lt;/p&gt;

&lt;h2 id=&#34;hva-trenger-man:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hva trenger man?&lt;/h2&gt;

&lt;p&gt;Når du allerede er komme til dette steget regner jeg med at du har en Arduino, USB-kabel og en datamaskin med Arduino IDE innstallert. Det du trenger i tillegg er et program Processing.&lt;/p&gt;

&lt;h3 id=&#34;processing:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Processing?&lt;/h3&gt;

&lt;p&gt;Processing kan brukes til så mangt. Det vi skal bruke det til er å lese av en fil fra internett og sende den informasjonen videre til vår Arduino som er koble til via USB. Processing IDE er så likt Arduino IDE at når du skal programere så vil du lett kjenne deg igjen.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;
&lt;div class=&#34;clearfix&#34;&gt;&lt;/div&gt;
&lt;div class=&#34;col-xs-12 sjsd-post sjsd-post-image&#34;&gt;

    &lt;figure &gt;
        
            &lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/arduino-processing.png?w=1840&amp;amp;h=997&#34; alt=&#34;Skjermbilde av programvaren&#34; /&gt;
        
        
        &lt;figcaption&gt;
            &lt;h4&gt;Skjermbilde av programvare&lt;/h4&gt;
            &lt;p&gt;
            Skjermbilde av programvaren
            
                
            
            &lt;/p&gt; 
        &lt;/figcaption&gt;
        
    &lt;/figure&gt;

&lt;/div&gt;
&lt;div class=&#34;clearfix&#34;&gt;&lt;/div&gt;
&lt;div class=&#34;col-xs-12 col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 sjsd-post&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;kodesnutter:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Kodesnutter&lt;/h2&gt;

&lt;p&gt;Jeg kommer ikke til å gå inn i detalj for hver enkelt linje i koden. Jeg har forsøkt å kommentere hva som skjer i selve kodesnuttene.&lt;/p&gt;

&lt;h3 id=&#34;tekstfilen:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Tekstfilen&lt;/h3&gt;

&lt;p&gt;Vi begynner med tekstfilen som skal ligge tilgjengelig på internett. I dette eksempelet skal den inneholde et tall. F.eks. 10.&lt;/p&gt;

&lt;p&gt;Du trenger et nettsted å laste filen opp til og tilgang til å lese den. F.eks. &lt;a href=&#34;http://www.example.com/value.txt&#34;&gt;http://www.example.com/value.txt&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;processkoden:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Processkoden&lt;/h3&gt;

&lt;p&gt;I korte trekk så tar Processing å leser filen vi har lastet opp på internett. Så tar den tallet og sender via serial (USB) til en Arduino.&lt;/p&gt;

&lt;p&gt;Du kan &lt;a href=&#34;https://gist.github.com/sjsd/73756ec4e75d137bb470&#34;&gt;laste ned min ferdigkode fra Github&lt;/a&gt;. Jeg har etter beste evne forsøkt å kommentere hva som skjer i koden. Gjør nødvendige endringer i koden, som adressen til din tekstfil med verdien.&lt;/p&gt;

&lt;h3 id=&#34;arduinokoden:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Arduinokoden&lt;/h3&gt;

&lt;p&gt;I korte trekk så leser Arduinoen av informasjon som kommer via serial (i dette tilfellet fra Processing).&lt;/p&gt;

&lt;p&gt;Du kan &lt;a href=&#34;https://gist.github.com/sjsd/73756ec4e75d137bb470&#34;&gt;laste ned min ferdigkode fra Github&lt;/a&gt;. Jeg har etter beste evne forsøkt å kommentere hva som skjer i koden. Før koden over til din Arduino.&lt;/p&gt;

&lt;h2 id=&#34;hvordan-utføre:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hvordan utføre&lt;/h2&gt;

&lt;p&gt;Hvis du ikke allerede har gjort det så før over koden til din Arduino. Den vil nå sjekke om det kommer noe informasjon via USB fra Processing. Trykk på «Play» i Processing. LED på Arduinoen vil nå snart blinke like mange ganger som vi har satt verdien i tekstfilen.&lt;/p&gt;

&lt;h2 id=&#34;hva-kan-man-bruke-dette-til:e57ce773b0205d14e1ef7825b731e38d&#34;&gt;Hva kan man bruke dette til?&lt;/h2&gt;

&lt;p&gt;Verdien som Processing leser av må ikke være en statisk tekstfil. Det kan være så mye annet. F.eks. en eller annen verdi forå styre et lys, flere lys, analog verdi som du kan gjøre om til å få din Arduino til å kontrollere et eller annet.&lt;/p&gt;

&lt;p&gt;Man kan også snu på flisa og få Processing til å få en verdi fra Arduino og skrive til en fil. F.eks. hvis man har en temperaturmåler koblet til en Arduino så kan Processing skrive denne verdien til en fil på din datamaskin eller på internett.&lt;/p&gt;

&lt;p&gt;Mitt eksempel i dette innlegget er helt grunnleggende bare for å vise at det er mulig å koble en Arduino til internett via en USB-kabel.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og HC-SR04 (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-og-hc-sr04-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette innlegget er neste identisk med mitt innlegg &lt;a href=&#34;https://helgejohnsen.wordpress.com/2015/09/01/arduino-og-ping-ultrasonisk-sensor/&#34;&gt;Arduino og Ping (ultrasonisk sensor)&lt;/a&gt;. Eneste forskjellen er bytte av sen ultrasoniske sensoren. Både Ping oh HC-SR04 er populære sensorer å koble til Arduino. I bunn og grunn helt like produkter men med en stor forskjell – antall pinner. Ping har 3 mens HC-SR04 har 4 pinner. Derfor blir koblingskjemaet og koden bittelitt forskjellig.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;En ultrasonisk sensor måler avstanden til et objekt. Basert på avstanden så vil tre ulike LED lyse opp. Grønn LED lyser ved avstand over 25cm. Orange LED lyser ved avstand mellom 10 og 25 cm. Rød LED lyser ved avstand under 10 cm.&lt;/p&gt;

&lt;h2 id=&#34;skisse:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png&#34;&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/hcsr04-2_bb.png?w=700&amp;amp;h=361&#34; alt=&#34;hcsr04-2_bb&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hc-sr04:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;HC-SR04&lt;/h2&gt;

&lt;p&gt;HC-SR04 har 4 pinner:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;VCC – 5V (positiv)&lt;/li&gt;
&lt;li&gt;Trig – signal inn fra Arduino (trigger)&lt;/li&gt;
&lt;li&gt;Echo – signal ut fra&lt;/li&gt;
&lt;li&gt;Gnd – jord (negativ)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fordelen med fire pinner er at programmet til Arduinoen slipper å skifte mellom inn- og utgang på samme pinne.&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:7184f21ca1b74fa43e589a2770b7345e&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En HC-SR04 er like enkelt å sette opp og bruke som en Ping. Er man nybegynner så er det kanskje lettere å forstå programeringen med 4 pinner kontra 3 pinner. Man sender inn et signal og får straks svar tilbake på den andre pinnen.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arduino og Ping (ultrasonisk sensor)</title>
      <link>http://sjsd.github.io/post/arduino-og-ping-ultrasonisk-sensor/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/arduino-og-ping-ultrasonisk-sensor/</guid>
      <description>

&lt;p&gt;Dette er helt grunnleggende hvordan man kobler opp en Arduino og en Ping. Koden jeg har brukt er basert på standard eksempel fra Arduino. Eneste jeg har gjort er å legge til tre LED som lyser basert på avstand.&lt;/p&gt;

&lt;p&gt;Jeg har lånt meg en Ping og satt opp en enkelt test. Dette er en liten del av et litt større prosjekt jeg planlegger. Flere innlegg vil nok komme etter hvert.&lt;/p&gt;

&lt;h2 id=&#34;tl-dr:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;Når et objekt er lengre unna enn 26 cm så vil grønn LED lyse. Når et objekt er mellom 26 og 10 cm unna så vil orange LED lyse. Hvis et objekt er 10cm eller nærmere så vil rød LED lyse. Avstanden måles med Ping (en ultrasonisk sensor).&lt;/p&gt;

&lt;h2 id=&#34;skisse:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;Skisse&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2015/09/ping_bb.png?w=700&amp;amp;h=878&#34; alt=&#34;Arduino Ping&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;kode:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;Kode&lt;/h2&gt;

&lt;p&gt;Dessverre så får jeg ikke limt inn koden og stilsatt den på en slik måte at den er lettlest. Dette pga restriksjoner knyttet til WordPress (siden jeg ikke hoster WordPress selv). Men jeg har lagt ut koden på Github for den som ønsker å laste den ned.&lt;/p&gt;

&lt;p&gt;Se og last ned koden her &lt;a href=&#34;https://gist.github.com/sjsd/cf9ea98577b9b277143c&#34;&gt;https://gist.github.com/sjsd/cf9ea98577b9b277143c&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;konklusjon:b6dccdf5da1a9e2ff64c9d8f617c8f2f&#34;&gt;Konklusjon&lt;/h2&gt;

&lt;p&gt;En Ping (eller en ultrasonisk sensor) er en veldig enkelt sak å sette opp. Den jeg har brukt her har tre pinne (en for 5V, jord og signal). Man sender inn et signal og får straks svar tilbake på samme pinne (utgang/inngang på Arduinoen). I koden jeg har brukes inn- utgang 7. Rett etter man har sendt et signal endrer man utgangen til en inngang som er klar for å ta imot signalet.&lt;/p&gt;

&lt;p&gt;Med en enkel formel så kan Arduinoen endre svaret til noe mer lesbart, som f.eks. antall centimeter fra Ping-en og til et objekt foran.&lt;/p&gt;

&lt;p&gt;Fordelen er at den er enkel å bruke og man kan selv sette terskselverdier for handlinger basert på avstander. Ulempen er at objektet må være rett foran Ping-en. Jeg har gjort noen forsøk på f.eks. å holde et ark i 45 graders vinkel. Da klarer ikke Ping-en å måle avstanden. Antageligvis pga at signalet blir reflektert vekk og ikke tilbake.&lt;/p&gt;

&lt;p&gt;Likevel er jeg sikker på at en ultrasonisk sensor er det mest anvendelige i prosjektet mitt.&lt;/p&gt;

&lt;p&gt;Ping-en jeg har brukt er en lånt enhet. Selv så venter jeg på en jeg har bestilt billig fra eBay. Den har fire pinner. Forskjellen er at man slipper å endre pinne 7 mellom å sende et signal og ta imot et signal. Man bruker da en egen inngang og en egen utgang for å sende eller motta signal. Ellers er prinsippet det samme.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Legg til hendeslessporing for Google Analytics til Ninja Blocks</title>
      <link>http://sjsd.github.io/post/legg-til-hendeslessporing-for-google-analytics-til-ninja-block/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/legg-til-hendeslessporing-for-google-analytics-til-ninja-block/</guid>
      <description>

&lt;p&gt;Google Analytics (GA) har mulighet for å legge til sporing av enten sidevisning eller hendelse via en egen måleprotokoll (&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/protocol/v1/&#34; title=&#34;Google Analytics Measurement Protocol&#34;&gt;Measurement Protocol&lt;/a&gt;). Kort fortalt så spores sider og hendelser via javascript. Men ved å sende en forespørsel til en egen URL til GA så kan man sende inn sporinger uten javascript. Her skal jeg forsøke å beskrive hvordan man setter opp en slik URL og hvordan jeg bruker den sammen med Ninja Blocks.&lt;/p&gt;

&lt;div class=&#34;block-message info&#34;&gt;

**TL;DR**

Ved å legge til en webhook for Ninja Blocks kan man legge til sporing i Google Analytics. Legg til &lt;span class=&#34;skimlinks-unlinked&#34;&gt;http://www.google-analytics.com/collect&lt;/span&gt; som URI og eksempelvis v=1&amp;tid=UA-XXX-Y&amp;cid=555&amp;t=event&amp;ec=Bevegelse&amp;ea=Åpnet&amp;el=Ytterdør som POST data. Opprett så en regel som utfører sporingen.

&lt;/div&gt;

&lt;h2 id=&#34;google-analytics:e9020054e4ab7898b92cda096749c59b&#34;&gt;Google Analytics&lt;/h2&gt;

&lt;h3 id=&#34;grunnleggende:e9020054e4ab7898b92cda096749c59b&#34;&gt;Grunnleggende&lt;/h3&gt;

&lt;p&gt;Først må man opprette en GA-konto (noe jeg regner med at du allerede har) og finne sporings-IDen. Sporings-IDen ser typisk slik ut UA-12345678-9. Så må man bygge opp URL-en man skal sende et kall til. URL-en må se slik ut (&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/protocol/v1/devguide#required&#34; title=&#34;Sending Required Values&#34;&gt;dette er minstekravet&lt;/a&gt;): &lt;a href=&#34;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXXX-Y&amp;amp;cid=555&amp;amp;t=pageview&#34;&gt;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXXX-Y&amp;amp;cid=555&amp;amp;t=pageview&lt;/a&gt;&lt;br /&gt;
Hvis vi bryter den ned litt så ser vi hvilken elementer URL-en består av&lt;/p&gt;

&lt;table class=&#34;lensTable&#34;&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Element&lt;/th&gt;

&lt;th&gt;Forklaring&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;[http://www.google-analytics.com/collect](http://www.google-analytics.com/collect)&lt;/td&gt;

&lt;td&gt;URL&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;v=1&lt;/td&gt;

&lt;td&gt;Versjon (i skrivende stund 1)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;tid=UA-XXX-Y&lt;/td&gt;

&lt;td&gt;Bytt ut UA-XXX-Y med din sporings-ID&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cid=555&lt;/td&gt;

&lt;td&gt;Tillater anonym sporing&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;t=pageview&lt;/td&gt;

&lt;td&gt;Type sporing (pageview eller event)&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;h3 id=&#34;hendelsessporing:e9020054e4ab7898b92cda096749c59b&#34;&gt;Hendelsessporing&lt;/h3&gt;

&lt;p&gt;For å spore en spesiell hendelse så trenger vi å legge til noen ekstra parametere. Målet mitt er å registrere en spesifikk hendelse som jeg sendere skal bruke med min Ninja Blocks. Derfor legger jeg til følgende elementer i URL-en:&lt;/p&gt;

&lt;table class=&#34;lensTable&#34;&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Element&lt;/th&gt;

&lt;th&gt;Forklaring&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;[http://www.google-analytics.com/collect](http://www.google-analytics.com/collect)&lt;/td&gt;

&lt;td&gt;URL&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;v=1&lt;/td&gt;

&lt;td&gt;Versjon (i skrivende stund 1)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;tid=UA-XXX-Y&lt;/td&gt;

&lt;td&gt;Bytt ut UA-XXX-Y med din sporings-ID&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cid=555&lt;/td&gt;

&lt;td&gt;Tillater anonym sporing&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;t=event&lt;/td&gt;

&lt;td&gt;Type sporing (pageview eller event)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ec=Bevegelse&lt;/td&gt;

&lt;td&gt;Hendelseskategori&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ea=Åpnet&lt;/td&gt;

&lt;td&gt;Handling&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;el=Ytterdør&lt;/td&gt;

&lt;td&gt;Hendelsesetikett&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;p&gt;Som du ser så har jeg lagt til noen nye elementer. Disse er kategori, handling og etikett. Så min komplette URL er nå ferdig og jeg kan teste den direkte i nettleseren for å se at sporingen blir slik jeg ønsker i GA.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXX-Y&amp;amp;cid=555&amp;amp;t=event&amp;amp;ec=Bevegelse&amp;amp;ea=Åpnet&amp;amp;el=Ytterdør&#34;&gt;http://www.google-analytics.com/collect?v=1&amp;amp;tid=UA-XXX-Y&amp;amp;cid=555&amp;amp;t=event&amp;amp;ec=Bevegelse&amp;amp;ea=Åpnet&amp;amp;el=Ytterdør&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ninja-blocks-webhook:e9020054e4ab7898b92cda096749c59b&#34;&gt;Ninja Blocks Webhook&lt;/h2&gt;

&lt;p&gt;For Ninja Blocks kan man legge til noe de kaller for en webhook. Jeg vet ikke om noen god norsk oversettelse av ordet webhook, så jeg bruker det engelske ordet. Da kan man benytte denne som en del av et regelsett. Jeg regner med at du er kjent med Ninja Blocks og hvordan opprette en regel.&lt;/p&gt;

&lt;p&gt;Hvis du ikke har aktivert webhook så gå til &lt;a href=&#34;http://help.ninjablocks.com/customer/portal/articles/683991-webhooks&#34; title=&#34;Ninja Blocks Webhooks&#34;&gt;Settings –&amp;gt; Sevices og aktiver Webhook&lt;/a&gt;. Nå vil det dukke opp et nytt element på forsiden hvor man kan administrere webhook-er.&lt;/p&gt;

&lt;h3 id=&#34;opprett-webhook:e9020054e4ab7898b92cda096749c59b&#34;&gt;Opprett webhook&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Trykk på «Add a webhook»&lt;/li&gt;
&lt;li&gt;Velg så «Outbound Webhook (Actuator)» i nedtrekksmenyen&lt;/li&gt;
&lt;li&gt;Gi den et navn, f.eks «GA – Ytterdør»&lt;/li&gt;
&lt;li&gt;Legg til «Webhook URI»:&lt;br /&gt;
&lt;a href=&#34;http://www.google-analytics.com/collect&#34;&gt;http://www.google-analytics.com/collect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I feltet «POST data» legges resten av URL-en til:&lt;br /&gt;
v=1&amp;amp;tid=UA-XXX-Y&amp;amp;cid=555&amp;amp;t=event&amp;amp;ec=Bevegelse&amp;amp;ea=Åpnet&amp;amp;el=Ytterdør&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Merk at spørsmålstegnet før v=1 ikke er med på punkt 5.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/12/webhook-ga.png?w=700&#34; alt=&#34;Ninja Blocks webhook GA&#34; /&gt;
&lt;br /&gt;
&lt;em&gt;Skjermbilde av opprettelse av en webook.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Etter at webhooken er opprettet så må man lage en regel som kjører webhooken ved en eller annen hendelse. I mitt tilfelle har jeg en trådløs dørsensor. Hver gang døren åpnes så registreres det som en hendelse (event) i GA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programmere ATTiny13a via Arduino</title>
      <link>http://sjsd.github.io/post/programmere-attiny13a-via-arduino/</link>
      <pubDate>Sat, 27 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/programmere-attiny13a-via-arduino/</guid>
      <description>

&lt;p&gt;Slik kan man programmere en Atmel ATTiny13a via en Arduino. Dette innlegget er mest for min egen del og for at jeg skal huske fremgangsmåten. Men så lenge jeg har et behov for å notere ned mine funn etter mye prøving og feiling så tenker jeg at det er like greit å dele min kunnskap med andre. Målet er å programmere en ATTiny13a ved å bruke en Arduino og Arduino IDE.&lt;/p&gt;

&lt;h2 id=&#34;last-ned:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Last ned&lt;/h2&gt;

&lt;p&gt;Last ned nødvendig programvare.&lt;/p&gt;

&lt;h3 id=&#34;arduino-ide:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Arduino IDE&lt;/h3&gt;

&lt;p&gt;Last ned versjon 1.0.0 av Arduino IDE &lt;a href=&#34;http://arduino.cc/en/Main/OldSoftwareReleases&#34; title=&#34;Arduino IDE old releases&#34;&gt;http://arduino.cc/en/Main/OldSoftwareReleases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jeg vet ikke årsaken, men jeg prøvde og feilet i lang tid ved å bruke versjon 1.0.5. Hver gang ble kompileringen av de helt enkleste eksempler (Blink) for stor til å laste inn på ATTiny13. Men etter et tips i en annen blogg prøvde jeg versjon 1.0.0 og vips så fikk jeg kompileringen til å bli liten nok til å passe inn på ATTiny13.&lt;/p&gt;

&lt;h3 id=&#34;attiny:260bd422fe249ca9139f6224b9b4a288&#34;&gt;ATTiny&lt;/h3&gt;

&lt;p&gt;Arduino IDE har ingen kunnskap om ATTiny13. Så last ned fra GitHub &lt;a href=&#34;https://github.com/tekstop/attiny/tree/Arduino1&#34;&gt;https://github.com/tekstop/attiny/tree/Arduino1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Plasser innholdet i den ZIP-ede filen i mappen hardware i mappen for Arduino IDE. Eksempelvis så ser mappestrukturen min slik ut: c:arduino100/hardware/attiny/ I denne mappen ligger altså filene og mappene fra ZIP-filen.&lt;/p&gt;

&lt;h3 id=&#34;endring:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Endring&lt;/h3&gt;

&lt;p&gt;Før du åpner Arduino IDE så må det legges til en liten endring i en fil som heter wiring.c. Denne fila finner du i mappen &lt;em&gt;hardwarearduinocoresarduino&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;På linje (ca 44) legger man til _|| (&lt;strong&gt;AVR_ATtiny13&lt;/strong&gt;) _sammen med de andre definisjonene.&lt;/p&gt;

&lt;h2 id=&#34;oppkobling:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Oppkobling&lt;/h2&gt;

&lt;p&gt;For at Arduino-en skal kunne programmere brikken så må de kobles sammen. Eksempel: pinne 13 på Arduino til pinne 7 på brikka osv. Se skjemaet og skissen under.&lt;/p&gt;

&lt;table&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;**Arduino**&lt;/td&gt;

&lt;td&gt;**ATTiny13a**&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;13&lt;/td&gt;

&lt;td&gt;7&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;12&lt;/td&gt;

&lt;td&gt;6&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;11&lt;/td&gt;

&lt;td&gt;5&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;10&lt;/td&gt;

&lt;td&gt;1&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;5V&lt;/td&gt;

&lt;td&gt;8&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;GND&lt;/td&gt;

&lt;td&gt;4&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/untitled-sketch-2_bb.png?w=560&amp;amp;h=374&#34; alt=&#34;Arduino to ATTiny13a&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;programmeringen:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Programmeringen&lt;/h2&gt;

&lt;p&gt;Nå er Arduinoen og brikka koblet opp, bibliotektet for ATTiny13 er lagt til for Arduino IDE og definisjonen for brikka er lagt til i &lt;span class=&#34;skimlinks-unlinked&#34;&gt;wiring.c-fila&lt;/span&gt;. Det er på tide å åpne Arduino IDE og gjøre de innledende innstillinger.&lt;/p&gt;

&lt;h3 id=&#34;velg-din-arduino-versjon:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Velg din Arduino versjon&lt;/h3&gt;

&lt;p&gt;Under &lt;em&gt;Tools -&amp;gt; Boards&lt;/em&gt; så velg din Arduino. I mitt tilfelle er det Arduino Uno.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/27-09-2014-15-15-16.png?w=560&amp;amp;h=857&#34; alt=&#34;Arduino IDE - boards&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;velg-arduino-som-programmer:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Velg Arduino som programmer&lt;/h3&gt;

&lt;p&gt;Under &lt;em&gt;Tools -&amp;gt; Programmer&lt;/em&gt; så velg &lt;em&gt;Arduino as ISP&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/27-09-2014-15-18-04.png?w=700&#34; alt=&#34;Arduino as ISP&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;åpne-arduinoisp:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Åpne ArduinoISP&lt;/h3&gt;

&lt;p&gt;Gå &lt;em&gt;File -&amp;gt; Examples&lt;/em&gt; og åpne ArduinoISP&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/27-09-2014-15-18-041.png?w=700&#34; alt=&#34;ArduinoISP&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Last opp ArduinoISP til Arduinoen, Ctrl + U. Nå er Arduinoen klar til å kunne programere ATTiny13a-brikken.&lt;/p&gt;

&lt;h2 id=&#34;test-med-blink:260bd422fe249ca9139f6224b9b4a288&#34;&gt;Test med «Blink»&lt;/h2&gt;

&lt;p&gt;For å teste at alt er i orden så kan du koble til en motstand (ca. 200 Ohm) på pinne 3 på brikka, så en LED så til GND.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://helgejohnsen.files.wordpress.com/2014/09/untitled-sketch-2_bb-led.png?w=560&amp;amp;h=329&#34; alt=&#34;Arduino - Attiny13a - LED&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Åpen Blink-eksempelet. Bytt ut utgang 13 med utgang 4. Last så opp programmet ved å bruke &lt;em&gt;File -&amp;gt; Upload Using Programmer&lt;/em&gt; (eller Ctrl + Shift + U).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Serial input (video)</title>
      <link>http://sjsd.github.io/post/serial-input-video/</link>
      <pubDate>Sat, 13 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/serial-input-video/</guid>
      <description>&lt;iframe width=&#34;700&#34; height=&#34;424&#34; src=&#34;https://www.youtube.com/embed/7Se3AXBjWMM&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Serial input</title>
      <link>http://sjsd.github.io/post/serial-input/</link>
      <pubDate>Fri, 12 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://sjsd.github.io/post/serial-input/</guid>
      <description>&lt;p&gt;Since I only have some LEDs to play with I had to be “creative”. So I have tried different ways to program my LEDs to light.&lt;/p&gt;

&lt;p&gt;This time I have been using the serial console in the Arduino enviroment software.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is how it’s works:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By entering the numbers from 0 to 3 I make one of the four LEDs connected to the Arduino to light for some milliseconds.&lt;/p&gt;

&lt;p&gt;Here is the code: &lt;a href=&#34;https://gist.github.com/sjsd/5375179&#34;&gt;https://gist.github.com/sjsd/5375179&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/5375179&#34;&gt;https://gist.github.com/5375179&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s not so easy to see on the sketch below, but each LED is connected to a output, then through a resistor back to ground. Each LED is connected to their own output. I have used output 10 to 13.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i1.wp.com/38.media.tumblr.com/695db328a4021adc19079be7ecf714e9/tumblr_inline_ml5vg7387s1qz4rgp.png&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>